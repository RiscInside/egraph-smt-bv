(set-logic QF_UFBV)

; SMT-LIBv2 description generated by Yosys 0.50+7 (git sha1 b0b53a22b, clang++ 18.1.8 -fPIC -O3)
; yosys-smt2-stbv
; yosys-smt2-module unoptimized
(define-sort |unoptimized_s| () (_ BitVec 17))
(define-fun |unoptimized_is| ((state |unoptimized_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |unoptimized#0| ((state |unoptimized_s|)) (_ BitVec 8) ((_ extract 8 1) state)) ; \a
; yosys-smt2-input a 8
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |unoptimized_n a| ((state |unoptimized_s|)) (_ BitVec 8) (|unoptimized#0| state))
(define-fun |unoptimized#1| ((state |unoptimized_s|)) (_ BitVec 8) ((_ extract 16 9) state)) ; \b
; yosys-smt2-input b 8
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |unoptimized_n b| ((state |unoptimized_s|)) (_ BitVec 8) (|unoptimized#1| state))
(define-fun |unoptimized#2| ((state |unoptimized_s|)) (_ BitVec 128) (bvadd (concat #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|unoptimized#0| state)) (concat #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|unoptimized#1| state)))) ; $add$verilog_examples/adder_bit_width/unoptimized.v:14$2_Y
; yosys-smt2-output sum 9
(define-fun |unoptimized_n sum| ((state |unoptimized_s|)) (_ BitVec 9) ((_ extract 8 0) (|unoptimized#2| state)))
(define-fun |unoptimized_a| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_u| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_i| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_h| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_t| ((state |unoptimized_s|) (next_state |unoptimized_s|)) Bool true) ; end of module unoptimized
; yosys-smt2-module reduced_bitwidth
(define-sort |reduced_bitwidth_s| () (_ BitVec 17))
(define-fun |reduced_bitwidth_is| ((state |reduced_bitwidth_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |reduced_bitwidth#0| ((state |reduced_bitwidth_s|)) (_ BitVec 8) ((_ extract 8 1) state)) ; \a
; yosys-smt2-input a 8
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |reduced_bitwidth_n a| ((state |reduced_bitwidth_s|)) (_ BitVec 8) (|reduced_bitwidth#0| state))
(define-fun |reduced_bitwidth#1| ((state |reduced_bitwidth_s|)) (_ BitVec 8) ((_ extract 16 9) state)) ; \b
; yosys-smt2-input b 8
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |reduced_bitwidth_n b| ((state |reduced_bitwidth_s|)) (_ BitVec 8) (|reduced_bitwidth#1| state))
(define-fun |reduced_bitwidth#2| ((state |reduced_bitwidth_s|)) (_ BitVec 9) (bvadd (concat #b0 (|reduced_bitwidth#0| state)) (concat #b0 (|reduced_bitwidth#1| state)))) ; $add$verilog_examples/adder_bit_width/reduced_bitwidth.v:14$4_Y
; yosys-smt2-output sum 9
(define-fun |reduced_bitwidth_n sum| ((state |reduced_bitwidth_s|)) (_ BitVec 9) (|reduced_bitwidth#2| state))
(define-fun |reduced_bitwidth_a| ((state |reduced_bitwidth_s|)) Bool true)
(define-fun |reduced_bitwidth_u| ((state |reduced_bitwidth_s|)) Bool true)
(define-fun |reduced_bitwidth_i| ((state |reduced_bitwidth_s|)) Bool true)
(define-fun |reduced_bitwidth_h| ((state |reduced_bitwidth_s|)) Bool true)
(define-fun |reduced_bitwidth_t| ((state |reduced_bitwidth_s|) (next_state |reduced_bitwidth_s|)) Bool true) ; end of module reduced_bitwidth
; yosys-smt2-module no_register
(define-sort |no_register_s| () (_ BitVec 17))
(define-fun |no_register_is| ((state |no_register_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |no_register#0| ((state |no_register_s|)) (_ BitVec 8) ((_ extract 8 1) state)) ; \a
; yosys-smt2-input a 8
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |no_register_n a| ((state |no_register_s|)) (_ BitVec 8) (|no_register#0| state))
(define-fun |no_register#1| ((state |no_register_s|)) (_ BitVec 8) ((_ extract 16 9) state)) ; \b
; yosys-smt2-input b 8
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |no_register_n b| ((state |no_register_s|)) (_ BitVec 8) (|no_register#1| state))
(define-fun |no_register#2| ((state |no_register_s|)) (_ BitVec 9) (bvadd (concat #b0 (|no_register#0| state)) (concat #b0 (|no_register#1| state)))) ; \sum
; yosys-smt2-output sum 9
(define-fun |no_register_n sum| ((state |no_register_s|)) (_ BitVec 9) (|no_register#2| state))
(define-fun |no_register_a| ((state |no_register_s|)) Bool true)
(define-fun |no_register_u| ((state |no_register_s|)) Bool true)
(define-fun |no_register_i| ((state |no_register_s|)) Bool true)
(define-fun |no_register_h| ((state |no_register_s|)) Bool true)
(define-fun |no_register_t| ((state |no_register_s|) (next_state |no_register_s|)) Bool true) ; end of module no_register
; yosys-smt2-module gpt4_attempt
(define-sort |gpt4_attempt_s| () (_ BitVec 17))
(define-fun |gpt4_attempt_is| ((state |gpt4_attempt_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |gpt4_attempt#0| ((state |gpt4_attempt_s|)) (_ BitVec 8) ((_ extract 8 1) state)) ; \a
; yosys-smt2-input a 8
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |gpt4_attempt_n a| ((state |gpt4_attempt_s|)) (_ BitVec 8) (|gpt4_attempt#0| state))
(define-fun |gpt4_attempt#1| ((state |gpt4_attempt_s|)) (_ BitVec 8) ((_ extract 16 9) state)) ; \b
; yosys-smt2-input b 8
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |gpt4_attempt_n b| ((state |gpt4_attempt_s|)) (_ BitVec 8) (|gpt4_attempt#1| state))
(define-fun |gpt4_attempt#2| ((state |gpt4_attempt_s|)) (_ BitVec 9) (bvadd (concat #b0 (|gpt4_attempt#0| state)) (concat #b0 (|gpt4_attempt#1| state)))) ; $add$verilog_examples/adder_bit_width/gpt4_attempt.v:9$7_Y
; yosys-smt2-output sum 9
(define-fun |gpt4_attempt_n sum| ((state |gpt4_attempt_s|)) (_ BitVec 9) (|gpt4_attempt#2| state))
(define-fun |gpt4_attempt_a| ((state |gpt4_attempt_s|)) Bool true)
(define-fun |gpt4_attempt_u| ((state |gpt4_attempt_s|)) Bool true)
(define-fun |gpt4_attempt_i| ((state |gpt4_attempt_s|)) Bool true)
(define-fun |gpt4_attempt_h| ((state |gpt4_attempt_s|)) Bool true)
(define-fun |gpt4_attempt_t| ((state |gpt4_attempt_s|) (next_state |gpt4_attempt_s|)) Bool true) ; end of module gpt4_attempt
; yosys-smt2-module miter3
(define-sort |miter3_s| () (_ BitVec 69))
(define-fun |miter3_is| ((state |miter3_s|)) Bool (= ((_ extract 0 0) state) #b1))
; yosys-smt2-cell unoptimized gold
; yosys-smt2-witness {"path": ["\\gold"], "smtname": "gold", "type": "cell"}
(define-fun |miter3#0| ((state |miter3_s|)) (_ BitVec 9) ((_ extract 9 1) state)) ; \gold_sum
(define-fun |miter3_h gold| ((state |miter3_s|)) (_ BitVec 17) ((_ extract 26 10) state))
; yosys-smt2-cell gpt4_attempt gate
; yosys-smt2-witness {"path": ["\\gate"], "smtname": "gate", "type": "cell"}
(define-fun |miter3#1| ((state |miter3_s|)) (_ BitVec 9) ((_ extract 35 27) state)) ; \gate_sum
(define-fun |miter3_h gate| ((state |miter3_s|)) (_ BitVec 17) ((_ extract 52 36) state))
(define-fun |miter3#2| ((state |miter3_s|)) Bool (= (|miter3#0| state) (|miter3#1| state))) ; $auto$miter.cc:242:create_miter_equiv$17
(define-fun |miter3#3| ((state |miter3_s|)) (_ BitVec 1) (bvnot (ite (|miter3#2| state) #b1 #b0))) ; \trigger
; yosys-smt2-output trigger 1
(define-fun |miter3_n trigger| ((state |miter3_s|)) Bool (= ((_ extract 0 0) (|miter3#3| state)) #b1))
(define-fun |miter3#4| ((state |miter3_s|)) (_ BitVec 8) ((_ extract 60 53) state)) ; \in_b
; yosys-smt2-input in_b 8
; yosys-smt2-witness {"offset": 0, "path": ["\\in_b"], "smtname": "in_b", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |miter3_n in_b| ((state |miter3_s|)) (_ BitVec 8) (|miter3#4| state))
(define-fun |miter3#5| ((state |miter3_s|)) (_ BitVec 8) ((_ extract 68 61) state)) ; \in_a
; yosys-smt2-input in_a 8
; yosys-smt2-witness {"offset": 0, "path": ["\\in_a"], "smtname": "in_a", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |miter3_n in_a| ((state |miter3_s|)) (_ BitVec 8) (|miter3#5| state))
; yosys-smt2-assert 0 $auto$miter.cc:274:create_miter_equiv$18
(define-fun |miter3_a 0| ((state |miter3_s|)) Bool (or (|miter3#2| state) (not true))) ; $auto$miter.cc:274:create_miter_equiv$18
(define-fun |miter3_a| ((state |miter3_s|)) Bool (and
  (|miter3_a 0| state)
  (|unoptimized_a| (|miter3_h gold| state))
  (|gpt4_attempt_a| (|miter3_h gate| state))
))
(define-fun |miter3_u| ((state |miter3_s|)) Bool (and
  (|unoptimized_u| (|miter3_h gold| state))
  (|gpt4_attempt_u| (|miter3_h gate| state))
))
(define-fun |miter3_i| ((state |miter3_s|)) Bool (and
  (|unoptimized_i| (|miter3_h gold| state))
  (|gpt4_attempt_i| (|miter3_h gate| state))
))
(define-fun |miter3_h| ((state |miter3_s|)) Bool (and
  (= (|miter3_is| state) (|unoptimized_is| (|miter3_h gold| state)))
  (= (|miter3#0| state) (|unoptimized_n sum| (|miter3_h gold| state))) ; unoptimized.sum
  (= (|miter3#4| state) (|unoptimized_n b| (|miter3_h gold| state))) ; unoptimized.b
  (= (|miter3#5| state) (|unoptimized_n a| (|miter3_h gold| state))) ; unoptimized.a
  (= (|miter3_is| state) (|gpt4_attempt_is| (|miter3_h gate| state)))
  (= (|miter3#1| state) (|gpt4_attempt_n sum| (|miter3_h gate| state))) ; gpt4_attempt.sum
  (= (|miter3#4| state) (|gpt4_attempt_n b| (|miter3_h gate| state))) ; gpt4_attempt.b
  (= (|miter3#5| state) (|gpt4_attempt_n a| (|miter3_h gate| state))) ; gpt4_attempt.a
  (|unoptimized_h| (|miter3_h gold| state))
  (|gpt4_attempt_h| (|miter3_h gate| state))
))
(define-fun |miter3_t| ((state |miter3_s|) (next_state |miter3_s|)) Bool (and
  (|unoptimized_t| (|miter3_h gold| state) (|miter3_h gold| next_state))
  (|gpt4_attempt_t| (|miter3_h gate| state) (|miter3_h gate| next_state))
)) ; end of module miter3
; yosys-smt2-module miter1
(define-sort |miter1_s| () (_ BitVec 69))
(define-fun |miter1_is| ((state |miter1_s|)) Bool (= ((_ extract 0 0) state) #b1))
; yosys-smt2-cell unoptimized gold
; yosys-smt2-witness {"path": ["\\gold"], "smtname": "gold", "type": "cell"}
(define-fun |miter1#0| ((state |miter1_s|)) (_ BitVec 9) ((_ extract 9 1) state)) ; \gold_sum
(define-fun |miter1_h gold| ((state |miter1_s|)) (_ BitVec 17) ((_ extract 26 10) state))
; yosys-smt2-cell reduced_bitwidth gate
; yosys-smt2-witness {"path": ["\\gate"], "smtname": "gate", "type": "cell"}
(define-fun |miter1#1| ((state |miter1_s|)) (_ BitVec 9) ((_ extract 35 27) state)) ; \gate_sum
(define-fun |miter1_h gate| ((state |miter1_s|)) (_ BitVec 17) ((_ extract 52 36) state))
(define-fun |miter1#2| ((state |miter1_s|)) Bool (= (|miter1#0| state) (|miter1#1| state))) ; $auto$miter.cc:242:create_miter_equiv$9
(define-fun |miter1#3| ((state |miter1_s|)) (_ BitVec 1) (bvnot (ite (|miter1#2| state) #b1 #b0))) ; \trigger
; yosys-smt2-output trigger 1
(define-fun |miter1_n trigger| ((state |miter1_s|)) Bool (= ((_ extract 0 0) (|miter1#3| state)) #b1))
(define-fun |miter1#4| ((state |miter1_s|)) (_ BitVec 8) ((_ extract 60 53) state)) ; \in_b
; yosys-smt2-input in_b 8
; yosys-smt2-witness {"offset": 0, "path": ["\\in_b"], "smtname": "in_b", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |miter1_n in_b| ((state |miter1_s|)) (_ BitVec 8) (|miter1#4| state))
(define-fun |miter1#5| ((state |miter1_s|)) (_ BitVec 8) ((_ extract 68 61) state)) ; \in_a
; yosys-smt2-input in_a 8
; yosys-smt2-witness {"offset": 0, "path": ["\\in_a"], "smtname": "in_a", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |miter1_n in_a| ((state |miter1_s|)) (_ BitVec 8) (|miter1#5| state))
; yosys-smt2-assert 0 $auto$miter.cc:274:create_miter_equiv$10
(define-fun |miter1_a 0| ((state |miter1_s|)) Bool (or (|miter1#2| state) (not true))) ; $auto$miter.cc:274:create_miter_equiv$10
(define-fun |miter1_a| ((state |miter1_s|)) Bool (and
  (|miter1_a 0| state)
  (|reduced_bitwidth_a| (|miter1_h gate| state))
  (|unoptimized_a| (|miter1_h gold| state))
))
(define-fun |miter1_u| ((state |miter1_s|)) Bool (and
  (|reduced_bitwidth_u| (|miter1_h gate| state))
  (|unoptimized_u| (|miter1_h gold| state))
))
(define-fun |miter1_i| ((state |miter1_s|)) Bool (and
  (|reduced_bitwidth_i| (|miter1_h gate| state))
  (|unoptimized_i| (|miter1_h gold| state))
))
(define-fun |miter1_h| ((state |miter1_s|)) Bool (and
  (= (|miter1_is| state) (|reduced_bitwidth_is| (|miter1_h gate| state)))
  (= (|miter1#1| state) (|reduced_bitwidth_n sum| (|miter1_h gate| state))) ; reduced_bitwidth.sum
  (= (|miter1#4| state) (|reduced_bitwidth_n b| (|miter1_h gate| state))) ; reduced_bitwidth.b
  (= (|miter1#5| state) (|reduced_bitwidth_n a| (|miter1_h gate| state))) ; reduced_bitwidth.a
  (= (|miter1_is| state) (|unoptimized_is| (|miter1_h gold| state)))
  (= (|miter1#0| state) (|unoptimized_n sum| (|miter1_h gold| state))) ; unoptimized.sum
  (= (|miter1#4| state) (|unoptimized_n b| (|miter1_h gold| state))) ; unoptimized.b
  (= (|miter1#5| state) (|unoptimized_n a| (|miter1_h gold| state))) ; unoptimized.a
  (|reduced_bitwidth_h| (|miter1_h gate| state))
  (|unoptimized_h| (|miter1_h gold| state))
))
(define-fun |miter1_t| ((state |miter1_s|) (next_state |miter1_s|)) Bool (and
  (|reduced_bitwidth_t| (|miter1_h gate| state) (|miter1_h gate| next_state))
  (|unoptimized_t| (|miter1_h gold| state) (|miter1_h gold| next_state))
)) ; end of module miter1
; yosys-smt2-module miter2
(define-sort |miter2_s| () (_ BitVec 69))
(define-fun |miter2_is| ((state |miter2_s|)) Bool (= ((_ extract 0 0) state) #b1))
; yosys-smt2-cell unoptimized gold
; yosys-smt2-witness {"path": ["\\gold"], "smtname": "gold", "type": "cell"}
(define-fun |miter2#0| ((state |miter2_s|)) (_ BitVec 9) ((_ extract 9 1) state)) ; \gold_sum
(define-fun |miter2_h gold| ((state |miter2_s|)) (_ BitVec 17) ((_ extract 26 10) state))
; yosys-smt2-cell no_register gate
; yosys-smt2-witness {"path": ["\\gate"], "smtname": "gate", "type": "cell"}
(define-fun |miter2#1| ((state |miter2_s|)) (_ BitVec 9) ((_ extract 35 27) state)) ; \gate_sum
(define-fun |miter2_h gate| ((state |miter2_s|)) (_ BitVec 17) ((_ extract 52 36) state))
(define-fun |miter2#2| ((state |miter2_s|)) Bool (= (|miter2#0| state) (|miter2#1| state))) ; $auto$miter.cc:242:create_miter_equiv$13
(define-fun |miter2#3| ((state |miter2_s|)) (_ BitVec 1) (bvnot (ite (|miter2#2| state) #b1 #b0))) ; \trigger
; yosys-smt2-output trigger 1
(define-fun |miter2_n trigger| ((state |miter2_s|)) Bool (= ((_ extract 0 0) (|miter2#3| state)) #b1))
(define-fun |miter2#4| ((state |miter2_s|)) (_ BitVec 8) ((_ extract 60 53) state)) ; \in_b
; yosys-smt2-input in_b 8
; yosys-smt2-witness {"offset": 0, "path": ["\\in_b"], "smtname": "in_b", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |miter2_n in_b| ((state |miter2_s|)) (_ BitVec 8) (|miter2#4| state))
(define-fun |miter2#5| ((state |miter2_s|)) (_ BitVec 8) ((_ extract 68 61) state)) ; \in_a
; yosys-smt2-input in_a 8
; yosys-smt2-witness {"offset": 0, "path": ["\\in_a"], "smtname": "in_a", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |miter2_n in_a| ((state |miter2_s|)) (_ BitVec 8) (|miter2#5| state))
; yosys-smt2-assert 0 $auto$miter.cc:274:create_miter_equiv$14
(define-fun |miter2_a 0| ((state |miter2_s|)) Bool (or (|miter2#2| state) (not true))) ; $auto$miter.cc:274:create_miter_equiv$14
(define-fun |miter2_a| ((state |miter2_s|)) Bool (and
  (|miter2_a 0| state)
  (|no_register_a| (|miter2_h gate| state))
  (|unoptimized_a| (|miter2_h gold| state))
))
(define-fun |miter2_u| ((state |miter2_s|)) Bool (and
  (|no_register_u| (|miter2_h gate| state))
  (|unoptimized_u| (|miter2_h gold| state))
))
(define-fun |miter2_i| ((state |miter2_s|)) Bool (and
  (|no_register_i| (|miter2_h gate| state))
  (|unoptimized_i| (|miter2_h gold| state))
))
(define-fun |miter2_h| ((state |miter2_s|)) Bool (and
  (= (|miter2_is| state) (|no_register_is| (|miter2_h gate| state)))
  (= (|miter2#1| state) (|no_register_n sum| (|miter2_h gate| state))) ; no_register.sum
  (= (|miter2#4| state) (|no_register_n b| (|miter2_h gate| state))) ; no_register.b
  (= (|miter2#5| state) (|no_register_n a| (|miter2_h gate| state))) ; no_register.a
  (= (|miter2_is| state) (|unoptimized_is| (|miter2_h gold| state)))
  (= (|miter2#0| state) (|unoptimized_n sum| (|miter2_h gold| state))) ; unoptimized.sum
  (= (|miter2#4| state) (|unoptimized_n b| (|miter2_h gold| state))) ; unoptimized.b
  (= (|miter2#5| state) (|unoptimized_n a| (|miter2_h gold| state))) ; unoptimized.a
  (|no_register_h| (|miter2_h gate| state))
  (|unoptimized_h| (|miter2_h gold| state))
))
(define-fun |miter2_t| ((state |miter2_s|) (next_state |miter2_s|)) Bool (and
  (|no_register_t| (|miter2_h gate| state) (|miter2_h gate| next_state))
  (|unoptimized_t| (|miter2_h gold| state) (|miter2_h gold| next_state))
)) ; end of module miter2
; end of yosys output

(declare-const state1 |miter1_s|)
(assert (|miter1_h| state1))

(declare-const state2 |miter2_s|)
(assert (|miter2_h| state2))

(declare-const state3 |miter3_s|)
(assert (|miter3_h| state3))

(assert (or (not (|miter1_a| state1)) (not (|miter2_a| state2)) (not (|miter3_a| state3))))


(check-sat)
