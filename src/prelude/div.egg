; <summary>div.egg - division and remainder rules</summary>

; ### Division by zero

; (rewrite (UDiv a (BvConst __0 w)) (BvConst (- (<< __1 w) __1) w) :subsume :ruleset fold)
; (rewrite (URem a (BvConst __0 w)) a :subsume :ruleset fold)

; ### Constant folding

; `UDiv` and `URem` are implemented with `/` and `%` as both values are known to be unsigned.
; We need to check for 0 to respect SMT2LIB semantics.

; (rewrite (UDiv (BvConst a w) (BvConst b _)) (BvConst (/ a b) w) :when ((!= b __0)) :subsume :ruleset fold)
; (rewrite (URem (BvConst a w) (BvConst b _)) (BvConst (% a b) w) :when ((!= b __0)) :subsume :ruleset fold)
