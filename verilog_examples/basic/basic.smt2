(set-logic QF_UFBV)

; SMT-LIBv2 description generated by Yosys 0.50+7 (git sha1 b0b53a22b, clang++ 18.1.8 -fPIC -O3)
; yosys-smt2-stbv
; yosys-smt2-module optimized
(define-sort |optimized_s| () (_ BitVec 130))
(define-fun |optimized_is| ((state |optimized_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |optimized#0| ((state |optimized_s|)) (_ BitVec 32) ((_ extract 32 1) state)) ; \A
; yosys-smt2-input A 32
; yosys-smt2-witness {"offset": 0, "path": ["\\A"], "smtname": "A", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |optimized_n A| ((state |optimized_s|)) (_ BitVec 32) (|optimized#0| state))
(define-fun |optimized#1| ((state |optimized_s|)) (_ BitVec 32) ((_ extract 64 33) state)) ; \B
; yosys-smt2-input B 32
; yosys-smt2-witness {"offset": 0, "path": ["\\B"], "smtname": "B", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |optimized_n B| ((state |optimized_s|)) (_ BitVec 32) (|optimized#1| state))
(define-fun |optimized#2| ((state |optimized_s|)) (_ BitVec 32) ((_ extract 96 65) state)) ; \C
; yosys-smt2-input C 32
; yosys-smt2-witness {"offset": 0, "path": ["\\C"], "smtname": "C", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |optimized_n C| ((state |optimized_s|)) (_ BitVec 32) (|optimized#2| state))
(define-fun |optimized#3| ((state |optimized_s|)) (_ BitVec 32) ((_ extract 128 97) state)) ; \D
; yosys-smt2-input D 32
; yosys-smt2-witness {"offset": 0, "path": ["\\D"], "smtname": "D", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |optimized_n D| ((state |optimized_s|)) (_ BitVec 32) (|optimized#3| state))
(define-fun |optimized#4| ((state |optimized_s|)) (_ BitVec 1) ((_ extract 129 129) state)) ; \s
(define-fun |optimized#5| ((state |optimized_s|)) (_ BitVec 32) (ite (= ((_ extract 0 0) (|optimized#4| state)) #b1) (|optimized#0| state) (|optimized#2| state))) ; $procmux$11_Y
(define-fun |optimized#6| ((state |optimized_s|)) (_ BitVec 32) (ite (= ((_ extract 0 0) (|optimized#4| state)) #b1) (|optimized#1| state) (|optimized#3| state))) ; $procmux$8_Y
(define-fun |optimized#7| ((state |optimized_s|)) (_ BitVec 33) (bvadd (concat #b0 (|optimized#5| state)) (concat #b0 (|optimized#6| state)))) ; $add$verilog_examples/basic/optimized.v:20$3_Y
; yosys-smt2-output Z 33
(define-fun |optimized_n Z| ((state |optimized_s|)) (_ BitVec 33) (|optimized#7| state))
; yosys-smt2-input s 1
; yosys-smt2-witness {"offset": 0, "path": ["\\s"], "smtname": "s", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |optimized_n s| ((state |optimized_s|)) Bool (= ((_ extract 0 0) (|optimized#4| state)) #b1))
(define-fun |optimized_a| ((state |optimized_s|)) Bool true)
(define-fun |optimized_u| ((state |optimized_s|)) Bool true)
(define-fun |optimized_i| ((state |optimized_s|)) Bool true)
(define-fun |optimized_h| ((state |optimized_s|)) Bool true)
(define-fun |optimized_t| ((state |optimized_s|) (next_state |optimized_s|)) Bool true) ; end of module optimized
; yosys-smt2-module unoptimized
(define-sort |unoptimized_s| () (_ BitVec 130))
(define-fun |unoptimized_is| ((state |unoptimized_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |unoptimized#0| ((state |unoptimized_s|)) (_ BitVec 32) ((_ extract 32 1) state)) ; \A
; yosys-smt2-input A 32
; yosys-smt2-witness {"offset": 0, "path": ["\\A"], "smtname": "A", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |unoptimized_n A| ((state |unoptimized_s|)) (_ BitVec 32) (|unoptimized#0| state))
(define-fun |unoptimized#1| ((state |unoptimized_s|)) (_ BitVec 32) ((_ extract 64 33) state)) ; \B
; yosys-smt2-input B 32
; yosys-smt2-witness {"offset": 0, "path": ["\\B"], "smtname": "B", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |unoptimized_n B| ((state |unoptimized_s|)) (_ BitVec 32) (|unoptimized#1| state))
(define-fun |unoptimized#2| ((state |unoptimized_s|)) (_ BitVec 32) ((_ extract 96 65) state)) ; \C
; yosys-smt2-input C 32
; yosys-smt2-witness {"offset": 0, "path": ["\\C"], "smtname": "C", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |unoptimized_n C| ((state |unoptimized_s|)) (_ BitVec 32) (|unoptimized#2| state))
(define-fun |unoptimized#3| ((state |unoptimized_s|)) (_ BitVec 32) ((_ extract 128 97) state)) ; \D
; yosys-smt2-input D 32
; yosys-smt2-witness {"offset": 0, "path": ["\\D"], "smtname": "D", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |unoptimized_n D| ((state |unoptimized_s|)) (_ BitVec 32) (|unoptimized#3| state))
(define-fun |unoptimized#4| ((state |unoptimized_s|)) (_ BitVec 33) (bvadd (concat #b0 (|unoptimized#2| state)) (concat #b0 (|unoptimized#3| state)))) ; $add$verilog_examples/basic/unoptimized.v:11$6_Y
(define-fun |unoptimized#5| ((state |unoptimized_s|)) (_ BitVec 33) (bvadd (concat #b0 (|unoptimized#0| state)) (concat #b0 (|unoptimized#1| state)))) ; $add$verilog_examples/basic/unoptimized.v:9$5_Y
(define-fun |unoptimized#6| ((state |unoptimized_s|)) (_ BitVec 1) ((_ extract 129 129) state)) ; \s
(define-fun |unoptimized#7| ((state |unoptimized_s|)) (_ BitVec 33) (ite (= ((_ extract 0 0) (|unoptimized#6| state)) #b1) (|unoptimized#5| state) (|unoptimized#4| state))) ; $procmux$14_Y
; yosys-smt2-output Z 33
(define-fun |unoptimized_n Z| ((state |unoptimized_s|)) (_ BitVec 33) (|unoptimized#7| state))
; yosys-smt2-input s 1
; yosys-smt2-witness {"offset": 0, "path": ["\\s"], "smtname": "s", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |unoptimized_n s| ((state |unoptimized_s|)) Bool (= ((_ extract 0 0) (|unoptimized#6| state)) #b1))
(define-fun |unoptimized_a| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_u| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_i| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_h| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_t| ((state |unoptimized_s|) (next_state |unoptimized_s|)) Bool true) ; end of module unoptimized
; yosys-smt2-module miter
(define-sort |miter_s| () (_ BitVec 456))
(define-fun |miter_is| ((state |miter_s|)) Bool (= ((_ extract 0 0) state) #b1))
; yosys-smt2-cell optimized gold
; yosys-smt2-witness {"path": ["\\gold"], "smtname": "gold", "type": "cell"}
(define-fun |miter#0| ((state |miter_s|)) (_ BitVec 33) ((_ extract 33 1) state)) ; \gold_Z
(define-fun |miter_h gold| ((state |miter_s|)) (_ BitVec 130) ((_ extract 163 34) state))
; yosys-smt2-cell unoptimized gate
; yosys-smt2-witness {"path": ["\\gate"], "smtname": "gate", "type": "cell"}
(define-fun |miter#1| ((state |miter_s|)) (_ BitVec 33) ((_ extract 196 164) state)) ; \gate_Z
(define-fun |miter_h gate| ((state |miter_s|)) (_ BitVec 130) ((_ extract 326 197) state))
(define-fun |miter#2| ((state |miter_s|)) Bool (= (|miter#0| state) (|miter#1| state))) ; $auto$miter.cc:242:create_miter_equiv$17
(define-fun |miter#3| ((state |miter_s|)) (_ BitVec 1) (bvnot (ite (|miter#2| state) #b1 #b0))) ; \trigger
; yosys-smt2-output trigger 1
(define-fun |miter_n trigger| ((state |miter_s|)) Bool (= ((_ extract 0 0) (|miter#3| state)) #b1))
(define-fun |miter#4| ((state |miter_s|)) Bool (= ((_ extract 327 327) state) #b1)) ; \in_s
; yosys-smt2-input in_s 1
; yosys-smt2-witness {"offset": 0, "path": ["\\in_s"], "smtname": "in_s", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |miter_n in_s| ((state |miter_s|)) Bool (|miter#4| state))
(define-fun |miter#5| ((state |miter_s|)) (_ BitVec 32) ((_ extract 359 328) state)) ; \in_D
; yosys-smt2-input in_D 32
; yosys-smt2-witness {"offset": 0, "path": ["\\in_D"], "smtname": "in_D", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |miter_n in_D| ((state |miter_s|)) (_ BitVec 32) (|miter#5| state))
(define-fun |miter#6| ((state |miter_s|)) (_ BitVec 32) ((_ extract 391 360) state)) ; \in_C
; yosys-smt2-input in_C 32
; yosys-smt2-witness {"offset": 0, "path": ["\\in_C"], "smtname": "in_C", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |miter_n in_C| ((state |miter_s|)) (_ BitVec 32) (|miter#6| state))
(define-fun |miter#7| ((state |miter_s|)) (_ BitVec 32) ((_ extract 423 392) state)) ; \in_B
; yosys-smt2-input in_B 32
; yosys-smt2-witness {"offset": 0, "path": ["\\in_B"], "smtname": "in_B", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |miter_n in_B| ((state |miter_s|)) (_ BitVec 32) (|miter#7| state))
(define-fun |miter#8| ((state |miter_s|)) (_ BitVec 32) ((_ extract 455 424) state)) ; \in_A
; yosys-smt2-input in_A 32
; yosys-smt2-witness {"offset": 0, "path": ["\\in_A"], "smtname": "in_A", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |miter_n in_A| ((state |miter_s|)) (_ BitVec 32) (|miter#8| state))
; yosys-smt2-assert 0 $auto$miter.cc:274:create_miter_equiv$18
(define-fun |miter_a 0| ((state |miter_s|)) Bool (or (|miter#2| state) (not true))) ; $auto$miter.cc:274:create_miter_equiv$18
(define-fun |miter_a| ((state |miter_s|)) Bool (and
  (|miter_a 0| state)
  (|unoptimized_a| (|miter_h gate| state))
  (|optimized_a| (|miter_h gold| state))
))
(define-fun |miter_u| ((state |miter_s|)) Bool (and
  (|unoptimized_u| (|miter_h gate| state))
  (|optimized_u| (|miter_h gold| state))
))
(define-fun |miter_i| ((state |miter_s|)) Bool (and
  (|unoptimized_i| (|miter_h gate| state))
  (|optimized_i| (|miter_h gold| state))
))
(define-fun |miter_h| ((state |miter_s|)) Bool (and
  (= (|miter_is| state) (|unoptimized_is| (|miter_h gate| state)))
  (= (|miter#4| state) (|unoptimized_n s| (|miter_h gate| state))) ; unoptimized.s
  (= (|miter#1| state) (|unoptimized_n Z| (|miter_h gate| state))) ; unoptimized.Z
  (= (|miter#5| state) (|unoptimized_n D| (|miter_h gate| state))) ; unoptimized.D
  (= (|miter#6| state) (|unoptimized_n C| (|miter_h gate| state))) ; unoptimized.C
  (= (|miter#7| state) (|unoptimized_n B| (|miter_h gate| state))) ; unoptimized.B
  (= (|miter#8| state) (|unoptimized_n A| (|miter_h gate| state))) ; unoptimized.A
  (= (|miter_is| state) (|optimized_is| (|miter_h gold| state)))
  (= (|miter#4| state) (|optimized_n s| (|miter_h gold| state))) ; optimized.s
  (= (|miter#0| state) (|optimized_n Z| (|miter_h gold| state))) ; optimized.Z
  (= (|miter#5| state) (|optimized_n D| (|miter_h gold| state))) ; optimized.D
  (= (|miter#6| state) (|optimized_n C| (|miter_h gold| state))) ; optimized.C
  (= (|miter#7| state) (|optimized_n B| (|miter_h gold| state))) ; optimized.B
  (= (|miter#8| state) (|optimized_n A| (|miter_h gold| state))) ; optimized.A
  (|unoptimized_h| (|miter_h gate| state))
  (|optimized_h| (|miter_h gold| state))
))
(define-fun |miter_t| ((state |miter_s|) (next_state |miter_s|)) Bool (and
  (|unoptimized_t| (|miter_h gate| state) (|miter_h gate| next_state))
  (|optimized_t| (|miter_h gold| state) (|miter_h gold| next_state))
)) ; end of module miter
; end of yosys output

(declare-const state |miter_s|)
(assert (|miter_h| state))
(assert (not (|miter_a| state)))
(check-sat)
