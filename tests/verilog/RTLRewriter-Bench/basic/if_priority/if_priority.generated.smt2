(set-logic QF_UFBV)

; SMT-LIBv2 description generated by Yosys 0.50+7 (git sha1 b0b53a22b, clang++ 18.1.8 -fPIC -O3)
; yosys-smt2-stbv
; yosys-smt2-module optimized
(define-sort |optimized_s| () (_ BitVec 9))
(define-fun |optimized_is| ((state |optimized_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |optimized#0| ((state |optimized_s|)) (_ BitVec 8) ((_ extract 8 1) state)) ; \binValue
(define-fun |optimized#1| ((state |optimized_s|)) Bool (= (|optimized#0| state) #b00000100)) ; $procmux$9_CMP
(define-fun |optimized#2| ((state |optimized_s|)) Bool (= (|optimized#0| state) #b00000011)) ; $procmux$10_CMP
(define-fun |optimized#3| ((state |optimized_s|)) Bool (= (|optimized#0| state) #b00000010)) ; $procmux$11_CMP
(define-fun |optimized#4| ((state |optimized_s|)) Bool (= (|optimized#0| state) #b00000001)) ; $procmux$12_CMP
(define-fun |optimized#5| ((state |optimized_s|)) (_ BitVec 8) (ite (|optimized#4| state) #b01000001 (ite (|optimized#3| state) #b01000010 (ite (|optimized#2| state) #b01000011 (ite (|optimized#1| state) #b01000100 #b01000101))))) ; $procmux$8_Y
; yosys-smt2-output asciiValue 8
(define-fun |optimized_n asciiValue| ((state |optimized_s|)) (_ BitVec 8) (|optimized#5| state))
; yosys-smt2-input binValue 8
; yosys-smt2-witness {"offset": 0, "path": ["\\binValue"], "smtname": "binValue", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |optimized_n binValue| ((state |optimized_s|)) (_ BitVec 8) (|optimized#0| state))
(define-fun |optimized_a| ((state |optimized_s|)) Bool true)
(define-fun |optimized_u| ((state |optimized_s|)) Bool true)
(define-fun |optimized_i| ((state |optimized_s|)) Bool true)
(define-fun |optimized_h| ((state |optimized_s|)) Bool true)
(define-fun |optimized_t| ((state |optimized_s|) (next_state |optimized_s|)) Bool true) ; end of module optimized
; yosys-smt2-module unoptimized
(define-sort |unoptimized_s| () (_ BitVec 9))
(define-fun |unoptimized_is| ((state |unoptimized_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |unoptimized#0| ((state |unoptimized_s|)) (_ BitVec 8) ((_ extract 8 1) state)) ; \binValue
(define-fun |unoptimized#1| ((state |unoptimized_s|)) Bool (= (|unoptimized#0| state) #b00000100)) ; $eq$unoptimized.v:10$6_Y
(define-fun |unoptimized#2| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#1| state) #b01000100 #b01000101)) ; $procmux$14_Y
(define-fun |unoptimized#3| ((state |unoptimized_s|)) Bool (= (|unoptimized#0| state) #b00000011)) ; $eq$unoptimized.v:8$5_Y
(define-fun |unoptimized#4| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#3| state) #b00000000 (|unoptimized#2| state))) ; $procmux$17_Y
(define-fun |unoptimized#5| ((state |unoptimized_s|)) Bool (= (|unoptimized#0| state) #b00000010)) ; $eq$unoptimized.v:6$4_Y
(define-fun |unoptimized#6| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#5| state) #b00000000 (|unoptimized#4| state))) ; $procmux$20_Y
(define-fun |unoptimized#7| ((state |unoptimized_s|)) Bool (= (|unoptimized#0| state) #b00000001)) ; $eq$unoptimized.v:4$3_Y
(define-fun |unoptimized#8| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#7| state) #b00000000 (|unoptimized#6| state))) ; $procmux$23_Y
(define-fun |unoptimized#9| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#3| state) #b01000011 (|unoptimized#8| state))) ; $procmux$26_Y
(define-fun |unoptimized#10| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#5| state) #b00000000 (|unoptimized#9| state))) ; $procmux$29_Y
(define-fun |unoptimized#11| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#7| state) #b00000000 (|unoptimized#10| state))) ; $procmux$32_Y
(define-fun |unoptimized#12| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#5| state) #b01000010 (|unoptimized#11| state))) ; $procmux$35_Y
(define-fun |unoptimized#13| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#7| state) #b00000000 (|unoptimized#12| state))) ; $procmux$38_Y
(define-fun |unoptimized#14| ((state |unoptimized_s|)) (_ BitVec 8) (ite (|unoptimized#7| state) #b01000001 (|unoptimized#13| state))) ; $procmux$41_Y
; yosys-smt2-output asciiValue 8
(define-fun |unoptimized_n asciiValue| ((state |unoptimized_s|)) (_ BitVec 8) (|unoptimized#14| state))
; yosys-smt2-input binValue 8
; yosys-smt2-witness {"offset": 0, "path": ["\\binValue"], "smtname": "binValue", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |unoptimized_n binValue| ((state |unoptimized_s|)) (_ BitVec 8) (|unoptimized#0| state))
(define-fun |unoptimized_a| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_u| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_i| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_h| ((state |unoptimized_s|)) Bool true)
(define-fun |unoptimized_t| ((state |unoptimized_s|) (next_state |unoptimized_s|)) Bool true) ; end of module unoptimized
; yosys-smt2-module miter
(define-sort |miter_s| () (_ BitVec 43))
(define-fun |miter_is| ((state |miter_s|)) Bool (= ((_ extract 0 0) state) #b1))
; yosys-smt2-cell optimized gold
; yosys-smt2-witness {"path": ["\\gold"], "smtname": "gold", "type": "cell"}
(define-fun |miter#0| ((state |miter_s|)) (_ BitVec 8) ((_ extract 8 1) state)) ; \gold_asciiValue
(define-fun |miter_h gold| ((state |miter_s|)) (_ BitVec 9) ((_ extract 17 9) state))
; yosys-smt2-cell unoptimized gate
; yosys-smt2-witness {"path": ["\\gate"], "smtname": "gate", "type": "cell"}
(define-fun |miter#1| ((state |miter_s|)) (_ BitVec 8) ((_ extract 25 18) state)) ; \gate_asciiValue
(define-fun |miter_h gate| ((state |miter_s|)) (_ BitVec 9) ((_ extract 34 26) state))
(define-fun |miter#2| ((state |miter_s|)) Bool (= (|miter#0| state) (|miter#1| state))) ; $auto$miter.cc:242:create_miter_equiv$44
(define-fun |miter#3| ((state |miter_s|)) (_ BitVec 1) (bvnot (ite (|miter#2| state) #b1 #b0))) ; \trigger
; yosys-smt2-output trigger 1
(define-fun |miter_n trigger| ((state |miter_s|)) Bool (= ((_ extract 0 0) (|miter#3| state)) #b1))
(define-fun |miter#4| ((state |miter_s|)) (_ BitVec 8) ((_ extract 42 35) state)) ; \in_binValue
; yosys-smt2-input in_binValue 8
; yosys-smt2-witness {"offset": 0, "path": ["\\in_binValue"], "smtname": "in_binValue", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |miter_n in_binValue| ((state |miter_s|)) (_ BitVec 8) (|miter#4| state))
; yosys-smt2-assert 0 $auto$miter.cc:274:create_miter_equiv$45
(define-fun |miter_a 0| ((state |miter_s|)) Bool (or (|miter#2| state) (not true))) ; $auto$miter.cc:274:create_miter_equiv$45
(define-fun |miter_a| ((state |miter_s|)) Bool (and
  (|miter_a 0| state)
  (|optimized_a| (|miter_h gold| state))
  (|unoptimized_a| (|miter_h gate| state))
))
(define-fun |miter_u| ((state |miter_s|)) Bool (and
  (|optimized_u| (|miter_h gold| state))
  (|unoptimized_u| (|miter_h gate| state))
))
(define-fun |miter_i| ((state |miter_s|)) Bool (and
  (|optimized_i| (|miter_h gold| state))
  (|unoptimized_i| (|miter_h gate| state))
))
(define-fun |miter_h| ((state |miter_s|)) Bool (and
  (= (|miter_is| state) (|optimized_is| (|miter_h gold| state)))
  (= (|miter#4| state) (|optimized_n binValue| (|miter_h gold| state))) ; optimized.binValue
  (= (|miter#0| state) (|optimized_n asciiValue| (|miter_h gold| state))) ; optimized.asciiValue
  (= (|miter_is| state) (|unoptimized_is| (|miter_h gate| state)))
  (= (|miter#4| state) (|unoptimized_n binValue| (|miter_h gate| state))) ; unoptimized.binValue
  (= (|miter#1| state) (|unoptimized_n asciiValue| (|miter_h gate| state))) ; unoptimized.asciiValue
  (|optimized_h| (|miter_h gold| state))
  (|unoptimized_h| (|miter_h gate| state))
))
(define-fun |miter_t| ((state |miter_s|) (next_state |miter_s|)) Bool (and
  (|optimized_t| (|miter_h gold| state) (|miter_h gold| next_state))
  (|unoptimized_t| (|miter_h gate| state) (|miter_h gate| next_state))
)) ; end of module miter
; end of yosys output

(declare-const state |miter_s|)
(assert (|miter_h| state)) ; Hierarchy assertion
(assert (not (|miter_a| state))) ; Miter assertion failure - output of miter is true
(check-sat)
