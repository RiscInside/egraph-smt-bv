; Alive2 compiler optimization refinement query
; More info in "Alive2: Bounded Translation Validation for LLVM", PLDI'21.
(set-info :status unknown)
(declare-fun |%#0| () (_ BitVec 64))
(declare-fun |np_%#0| () Bool)
(declare-fun |isundef_%#0| () (_ BitVec 1))
(assert
 (let ((?x21 ((_ extract 63 32) |%#0|)))
(let ((?x18 ((_ extract 31 0) |%#0|)))
(let (($x20 (= (_ bv0 32) ?x21)))
(let ((?x171 (ite $x20 ?x18 ?x21)))
(let ((?x175 (ite (= (_ bv1 1) ((_ extract 1 1) ?x171)) (_ bv30 32) (ite (= (_ bv1 1) ((_ extract 0 0) ?x171)) (_ bv31 32) (_ bv32 32)))))
(let ((?x181 (ite (= (_ bv1 1) ((_ extract 3 3) ?x171)) (_ bv28 32) (ite (= (_ bv1 1) ((_ extract 2 2) ?x171)) (_ bv29 32) ?x175))))
(let ((?x187 (ite (= (_ bv1 1) ((_ extract 5 5) ?x171)) (_ bv26 32) (ite (= (_ bv1 1) ((_ extract 4 4) ?x171)) (_ bv27 32) ?x181))))
(let ((?x193 (ite (= (_ bv1 1) ((_ extract 7 7) ?x171)) (_ bv24 32) (ite (= (_ bv1 1) ((_ extract 6 6) ?x171)) (_ bv25 32) ?x187))))
(let ((?x199 (ite (= (_ bv1 1) ((_ extract 9 9) ?x171)) (_ bv22 32) (ite (= (_ bv1 1) ((_ extract 8 8) ?x171)) (_ bv23 32) ?x193))))
(let ((?x205 (ite (= (_ bv1 1) ((_ extract 11 11) ?x171)) (_ bv20 32) (ite (= (_ bv1 1) ((_ extract 10 10) ?x171)) (_ bv21 32) ?x199))))
(let ((?x211 (ite (= (_ bv1 1) ((_ extract 13 13) ?x171)) (_ bv18 32) (ite (= (_ bv1 1) ((_ extract 12 12) ?x171)) (_ bv19 32) ?x205))))
(let ((?x217 (ite (= (_ bv1 1) ((_ extract 15 15) ?x171)) (_ bv16 32) (ite (= (_ bv1 1) ((_ extract 14 14) ?x171)) (_ bv17 32) ?x211))))
(let ((?x223 (ite (= (_ bv1 1) ((_ extract 17 17) ?x171)) (_ bv14 32) (ite (= (_ bv1 1) ((_ extract 16 16) ?x171)) (_ bv15 32) ?x217))))
(let ((?x229 (ite (= (_ bv1 1) ((_ extract 19 19) ?x171)) (_ bv12 32) (ite (= (_ bv1 1) ((_ extract 18 18) ?x171)) (_ bv13 32) ?x223))))
(let ((?x235 (ite (= (_ bv1 1) ((_ extract 21 21) ?x171)) (_ bv10 32) (ite (= (_ bv1 1) ((_ extract 20 20) ?x171)) (_ bv11 32) ?x229))))
(let ((?x241 (ite (= (_ bv1 1) ((_ extract 23 23) ?x171)) (_ bv8 32) (ite (= (_ bv1 1) ((_ extract 22 22) ?x171)) (_ bv9 32) ?x235))))
(let ((?x247 (ite (= (_ bv1 1) ((_ extract 25 25) ?x171)) (_ bv6 32) (ite (= (_ bv1 1) ((_ extract 24 24) ?x171)) (_ bv7 32) ?x241))))
(let ((?x253 (ite (= (_ bv1 1) ((_ extract 27 27) ?x171)) (_ bv4 32) (ite (= (_ bv1 1) ((_ extract 26 26) ?x171)) (_ bv5 32) ?x247))))
(let ((?x259 (ite (= (_ bv1 1) ((_ extract 29 29) ?x171)) (_ bv2 32) (ite (= (_ bv1 1) ((_ extract 28 28) ?x171)) (_ bv3 32) ?x253))))
(let ((?x265 (ite (= (_ bv1 1) ((_ extract 31 31) ?x171)) (_ bv0 32) (ite (= (_ bv1 1) ((_ extract 30 30) ?x171)) (_ bv1 32) ?x259))))
(let ((?x156 (ite $x20 (_ bv32 32) (_ bv0 32))))
(let ((?x273 (bvor ?x156 ?x265)))
(let ((?x32 (ite (= (_ bv1 1) ((_ extract 1 1) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv30 32) (ite (= (_ bv1 1) ((_ extract 0 0) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv31 32) (_ bv32 32)))))
(let ((?x40 (ite (= (_ bv1 1) ((_ extract 3 3) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv28 32) (ite (= (_ bv1 1) ((_ extract 2 2) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv29 32) ?x32))))
(let ((?x48 (ite (= (_ bv1 1) ((_ extract 5 5) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv26 32) (ite (= (_ bv1 1) ((_ extract 4 4) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv27 32) ?x40))))
(let ((?x56 (ite (= (_ bv1 1) ((_ extract 7 7) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv24 32) (ite (= (_ bv1 1) ((_ extract 6 6) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv25 32) ?x48))))
(let ((?x64 (ite (= (_ bv1 1) ((_ extract 9 9) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv22 32) (ite (= (_ bv1 1) ((_ extract 8 8) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv23 32) ?x56))))
(let ((?x72 (ite (= (_ bv1 1) ((_ extract 11 11) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv20 32) (ite (= (_ bv1 1) ((_ extract 10 10) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv21 32) ?x64))))
(let ((?x80 (ite (= (_ bv1 1) ((_ extract 13 13) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv18 32) (ite (= (_ bv1 1) ((_ extract 12 12) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv19 32) ?x72))))
(let ((?x88 (ite (= (_ bv1 1) ((_ extract 15 15) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv16 32) (ite (= (_ bv1 1) ((_ extract 14 14) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv17 32) ?x80))))
(let ((?x96 (ite (= (_ bv1 1) ((_ extract 17 17) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv14 32) (ite (= (_ bv1 1) ((_ extract 16 16) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv15 32) ?x88))))
(let ((?x104 (ite (= (_ bv1 1) ((_ extract 19 19) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv12 32) (ite (= (_ bv1 1) ((_ extract 18 18) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv13 32) ?x96))))
(let ((?x112 (ite (= (_ bv1 1) ((_ extract 21 21) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv10 32) (ite (= (_ bv1 1) ((_ extract 20 20) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv11 32) ?x104))))
(let ((?x120 (ite (= (_ bv1 1) ((_ extract 23 23) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv8 32) (ite (= (_ bv1 1) ((_ extract 22 22) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv9 32) ?x112))))
(let ((?x128 (ite (= (_ bv1 1) ((_ extract 25 25) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv6 32) (ite (= (_ bv1 1) ((_ extract 24 24) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv7 32) ?x120))))
(let ((?x136 (ite (= (_ bv1 1) ((_ extract 27 27) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv4 32) (ite (= (_ bv1 1) ((_ extract 26 26) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv5 32) ?x128))))
(let ((?x144 (ite (= (_ bv1 1) ((_ extract 29 29) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv2 32) (ite (= (_ bv1 1) ((_ extract 28 28) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv3 32) ?x136))))
(let ((?x151 (ite (= (_ bv1 1) ((_ extract 31 31) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv0 32) (ite (= (_ bv1 1) ((_ extract 30 30) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32))))) (_ bv1 32) ?x144))))
(let ((?x160 (bvor ?x151 ?x156)))
(let (($x267 (not (= (_ bv0 32) ?x171))))
(let (($x272 (and $x267 (and (bvsle (_ bv0 32) ?x265) (bvsle ?x265 (_ bv32 32))))))
(let (($x275 (and $x272 (= (_ bv0 32) (bvand ?x156 ?x265)))))
(let (($x280 (and $x275 (and (bvsle (_ bv0 32) ?x273) (bvsle ?x273 (_ bv63 32))))))
(let (($x153 (not (= (_ bv0 32) (bvor ?x21 (ite $x20 ?x18 (_ bv0 32)))))))
(let (($x158 (and $x153 (and (bvsle (_ bv0 32) ?x151) (bvsle ?x151 (_ bv32 32))))))
(let (($x162 (and $x158 (= (_ bv0 32) (bvand ?x151 ?x156)))))
(let (($x168 (and $x162 (and (bvsle (_ bv0 32) ?x160) (bvsle ?x160 (_ bv63 32))))))
(let (($x298 (or (not (and $x168 $x280)) (= ?x160 ?x273))))
(let (($x539 (not $x298)))
(let (($x16 (= (_ bv0 1) |isundef_%#0|)))
(let (($x164 (and $x16 |np_%#0|)))
(and $x164 $x539)))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
