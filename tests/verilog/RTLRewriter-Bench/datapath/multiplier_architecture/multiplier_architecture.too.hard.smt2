(set-logic QF_UFBV)

; SMT-LIBv2 description generated by Yosys 0.50+7 (git sha1 b0b53a22b, clang++ 18.1.8 -fPIC -O3)
; yosys-smt2-stbv
; yosys-smt2-module half_adder
(define-sort |half_adder_s| () (_ BitVec 3))
(define-fun |half_adder_is| ((state |half_adder_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |half_adder#0| ((state |half_adder_s|)) Bool (= ((_ extract 1 1) state) #b1)) ; \a
; yosys-smt2-input a 1
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |half_adder_n a| ((state |half_adder_s|)) Bool (|half_adder#0| state))
(define-fun |half_adder#1| ((state |half_adder_s|)) Bool (= ((_ extract 2 2) state) #b1)) ; \b
; yosys-smt2-input b 1
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |half_adder_n b| ((state |half_adder_s|)) Bool (|half_adder#1| state))
(define-fun |half_adder#2| ((state |half_adder_s|)) (_ BitVec 1) (bvand (ite (|half_adder#0| state) #b1 #b0) (ite (|half_adder#1| state) #b1 #b0))) ; \c0
; yosys-smt2-output c0 1
(define-fun |half_adder_n c0| ((state |half_adder_s|)) Bool (= ((_ extract 0 0) (|half_adder#2| state)) #b1))
(define-fun |half_adder#3| ((state |half_adder_s|)) (_ BitVec 1) (bvxor (ite (|half_adder#0| state) #b1 #b0) (ite (|half_adder#1| state) #b1 #b0))) ; \s0
; yosys-smt2-output s0 1
(define-fun |half_adder_n s0| ((state |half_adder_s|)) Bool (= ((_ extract 0 0) (|half_adder#3| state)) #b1))
(define-fun |half_adder_a| ((state |half_adder_s|)) Bool true)
(define-fun |half_adder_u| ((state |half_adder_s|)) Bool true)
(define-fun |half_adder_i| ((state |half_adder_s|)) Bool true)
(define-fun |half_adder_h| ((state |half_adder_s|)) Bool true)
(define-fun |half_adder_t| ((state |half_adder_s|) (next_state |half_adder_s|)) Bool true) ; end of module half_adder
; yosys-smt2-module full_adder
(define-sort |full_adder_s| () (_ BitVec 4))
(define-fun |full_adder_is| ((state |full_adder_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |full_adder#0| ((state |full_adder_s|)) Bool (= ((_ extract 1 1) state) #b1)) ; \a
; yosys-smt2-input a 1
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |full_adder_n a| ((state |full_adder_s|)) Bool (|full_adder#0| state))
(define-fun |full_adder#1| ((state |full_adder_s|)) Bool (= ((_ extract 2 2) state) #b1)) ; \b
; yosys-smt2-input b 1
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |full_adder_n b| ((state |full_adder_s|)) Bool (|full_adder#1| state))
(define-fun |full_adder#2| ((state |full_adder_s|)) (_ BitVec 1) (bvand (ite (|full_adder#0| state) #b1 #b0) (ite (|full_adder#1| state) #b1 #b0))) ; $and$unoptimized.v:10$5_Y
(define-fun |full_adder#3| ((state |full_adder_s|)) (_ BitVec 1) ((_ extract 3 3) state)) ; \cin
(define-fun |full_adder#4| ((state |full_adder_s|)) (_ BitVec 1) (bvand (ite (|full_adder#1| state) #b1 #b0) (|full_adder#3| state))) ; $and$unoptimized.v:10$6_Y
(define-fun |full_adder#5| ((state |full_adder_s|)) (_ BitVec 1) (bvor (|full_adder#2| state) (|full_adder#4| state))) ; $or$unoptimized.v:10$7_Y
(define-fun |full_adder#6| ((state |full_adder_s|)) (_ BitVec 1) (bvand (ite (|full_adder#0| state) #b1 #b0) (|full_adder#3| state))) ; $and$unoptimized.v:10$8_Y
(define-fun |full_adder#7| ((state |full_adder_s|)) (_ BitVec 1) (bvor (|full_adder#5| state) (|full_adder#6| state))) ; \c0
; yosys-smt2-output c0 1
(define-fun |full_adder_n c0| ((state |full_adder_s|)) Bool (= ((_ extract 0 0) (|full_adder#7| state)) #b1))
; yosys-smt2-input cin 1
; yosys-smt2-witness {"offset": 0, "path": ["\\cin"], "smtname": "cin", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |full_adder_n cin| ((state |full_adder_s|)) Bool (= ((_ extract 0 0) (|full_adder#3| state)) #b1))
(define-fun |full_adder#8| ((state |full_adder_s|)) (_ BitVec 1) (bvxor (ite (|full_adder#0| state) #b1 #b0) (ite (|full_adder#1| state) #b1 #b0))) ; $xor$unoptimized.v:9$3_Y
(define-fun |full_adder#9| ((state |full_adder_s|)) (_ BitVec 1) (bvxor (|full_adder#8| state) (|full_adder#3| state))) ; \s0
; yosys-smt2-output s0 1
(define-fun |full_adder_n s0| ((state |full_adder_s|)) Bool (= ((_ extract 0 0) (|full_adder#9| state)) #b1))
(define-fun |full_adder_a| ((state |full_adder_s|)) Bool true)
(define-fun |full_adder_u| ((state |full_adder_s|)) Bool true)
(define-fun |full_adder_i| ((state |full_adder_s|)) Bool true)
(define-fun |full_adder_h| ((state |full_adder_s|)) Bool true)
(define-fun |full_adder_t| ((state |full_adder_s|) (next_state |full_adder_s|)) Bool true) ; end of module full_adder
; yosys-smt2-module optimized_full_adder
(define-sort |optimized_full_adder_s| () (_ BitVec 4))
(define-fun |optimized_full_adder_is| ((state |optimized_full_adder_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |optimized_full_adder#0| ((state |optimized_full_adder_s|)) Bool (= ((_ extract 1 1) state) #b1)) ; \a
; yosys-smt2-input a 1
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |optimized_full_adder_n a| ((state |optimized_full_adder_s|)) Bool (|optimized_full_adder#0| state))
(define-fun |optimized_full_adder#1| ((state |optimized_full_adder_s|)) Bool (= ((_ extract 2 2) state) #b1)) ; \b
; yosys-smt2-input b 1
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |optimized_full_adder_n b| ((state |optimized_full_adder_s|)) Bool (|optimized_full_adder#1| state))
(define-fun |optimized_full_adder#2| ((state |optimized_full_adder_s|)) (_ BitVec 1) (bvand (ite (|optimized_full_adder#0| state) #b1 #b0) (ite (|optimized_full_adder#1| state) #b1 #b0))) ; $and$optimized.v:10$78_Y
(define-fun |optimized_full_adder#3| ((state |optimized_full_adder_s|)) (_ BitVec 1) ((_ extract 3 3) state)) ; \cin
(define-fun |optimized_full_adder#4| ((state |optimized_full_adder_s|)) (_ BitVec 1) (bvand (ite (|optimized_full_adder#1| state) #b1 #b0) (|optimized_full_adder#3| state))) ; $and$optimized.v:10$79_Y
(define-fun |optimized_full_adder#5| ((state |optimized_full_adder_s|)) (_ BitVec 1) (bvor (|optimized_full_adder#2| state) (|optimized_full_adder#4| state))) ; $or$optimized.v:10$80_Y
(define-fun |optimized_full_adder#6| ((state |optimized_full_adder_s|)) (_ BitVec 1) (bvand (ite (|optimized_full_adder#0| state) #b1 #b0) (|optimized_full_adder#3| state))) ; $and$optimized.v:10$81_Y
(define-fun |optimized_full_adder#7| ((state |optimized_full_adder_s|)) (_ BitVec 1) (bvor (|optimized_full_adder#5| state) (|optimized_full_adder#6| state))) ; \c0
; yosys-smt2-output c0 1
(define-fun |optimized_full_adder_n c0| ((state |optimized_full_adder_s|)) Bool (= ((_ extract 0 0) (|optimized_full_adder#7| state)) #b1))
; yosys-smt2-input cin 1
; yosys-smt2-witness {"offset": 0, "path": ["\\cin"], "smtname": "cin", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |optimized_full_adder_n cin| ((state |optimized_full_adder_s|)) Bool (= ((_ extract 0 0) (|optimized_full_adder#3| state)) #b1))
(define-fun |optimized_full_adder#8| ((state |optimized_full_adder_s|)) (_ BitVec 1) (bvxor (ite (|optimized_full_adder#0| state) #b1 #b0) (ite (|optimized_full_adder#1| state) #b1 #b0))) ; $xor$optimized.v:9$76_Y
(define-fun |optimized_full_adder#9| ((state |optimized_full_adder_s|)) (_ BitVec 1) (bvxor (|optimized_full_adder#8| state) (|optimized_full_adder#3| state))) ; \s0
; yosys-smt2-output s0 1
(define-fun |optimized_full_adder_n s0| ((state |optimized_full_adder_s|)) Bool (= ((_ extract 0 0) (|optimized_full_adder#9| state)) #b1))
(define-fun |optimized_full_adder_a| ((state |optimized_full_adder_s|)) Bool true)
(define-fun |optimized_full_adder_u| ((state |optimized_full_adder_s|)) Bool true)
(define-fun |optimized_full_adder_i| ((state |optimized_full_adder_s|)) Bool true)
(define-fun |optimized_full_adder_h| ((state |optimized_full_adder_s|)) Bool true)
(define-fun |optimized_full_adder_t| ((state |optimized_full_adder_s|) (next_state |optimized_full_adder_s|)) Bool true) ; end of module optimized_full_adder
; yosys-smt2-module optimized_half_adder
(define-sort |optimized_half_adder_s| () (_ BitVec 3))
(define-fun |optimized_half_adder_is| ((state |optimized_half_adder_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |optimized_half_adder#0| ((state |optimized_half_adder_s|)) Bool (= ((_ extract 1 1) state) #b1)) ; \a
; yosys-smt2-input a 1
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |optimized_half_adder_n a| ((state |optimized_half_adder_s|)) Bool (|optimized_half_adder#0| state))
(define-fun |optimized_half_adder#1| ((state |optimized_half_adder_s|)) Bool (= ((_ extract 2 2) state) #b1)) ; \b
; yosys-smt2-input b 1
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |optimized_half_adder_n b| ((state |optimized_half_adder_s|)) Bool (|optimized_half_adder#1| state))
(define-fun |optimized_half_adder#2| ((state |optimized_half_adder_s|)) (_ BitVec 1) (bvand (ite (|optimized_half_adder#0| state) #b1 #b0) (ite (|optimized_half_adder#1| state) #b1 #b0))) ; \c0
; yosys-smt2-output c0 1
(define-fun |optimized_half_adder_n c0| ((state |optimized_half_adder_s|)) Bool (= ((_ extract 0 0) (|optimized_half_adder#2| state)) #b1))
(define-fun |optimized_half_adder#3| ((state |optimized_half_adder_s|)) (_ BitVec 1) (bvxor (ite (|optimized_half_adder#0| state) #b1 #b0) (ite (|optimized_half_adder#1| state) #b1 #b0))) ; \s0
; yosys-smt2-output s0 1
(define-fun |optimized_half_adder_n s0| ((state |optimized_half_adder_s|)) Bool (= ((_ extract 0 0) (|optimized_half_adder#3| state)) #b1))
(define-fun |optimized_half_adder_a| ((state |optimized_half_adder_s|)) Bool true)
(define-fun |optimized_half_adder_u| ((state |optimized_half_adder_s|)) Bool true)
(define-fun |optimized_half_adder_i| ((state |optimized_half_adder_s|)) Bool true)
(define-fun |optimized_half_adder_h| ((state |optimized_half_adder_s|)) Bool true)
(define-fun |optimized_half_adder_t| ((state |optimized_half_adder_s|) (next_state |optimized_half_adder_s|)) Bool true) ; end of module optimized_half_adder
; yosys-smt2-module unoptimized
(define-sort |unoptimized_s| () (_ BitVec 77))
(define-fun |unoptimized_is| ((state |unoptimized_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |unoptimized#0| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 4 1) state)) ; \A
; yosys-smt2-input A 4
; yosys-smt2-witness {"offset": 0, "path": ["\\A"], "smtname": "A", "smtoffset": 0, "type": "input", "width": 4}
(define-fun |unoptimized_n A| ((state |unoptimized_s|)) (_ BitVec 4) (|unoptimized#0| state))
(define-fun |unoptimized#1| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 8 5) state)) ; \B
; yosys-smt2-input B 4
; yosys-smt2-witness {"offset": 0, "path": ["\\B"], "smtname": "B", "smtoffset": 0, "type": "input", "width": 4}
(define-fun |unoptimized_n B| ((state |unoptimized_s|)) (_ BitVec 4) (|unoptimized#1| state))
(define-fun |unoptimized#2| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 0 0) (|unoptimized#0| state)) ((_ extract 0 0) (|unoptimized#1| state)))) ; $and$unoptimized.v:22$58_Y
; yosys-smt2-cell half_adder h0
; yosys-smt2-witness {"path": ["\\h0"], "smtname": "h0", "type": "cell"}
(define-fun |unoptimized#3| ((state |unoptimized_s|)) Bool (= ((_ extract 9 9) state) #b1)) ; $indirect$\c0$unoptimized.v:31$13
(define-fun |unoptimized#4| ((state |unoptimized_s|)) Bool (= ((_ extract 10 10) state) #b1)) ; $indirect$\s0$unoptimized.v:31$12
(define-fun |unoptimized_h h0| ((state |unoptimized_s|)) (_ BitVec 3) ((_ extract 13 11) state))
; yosys-smt2-cell full_adder f0
; yosys-smt2-witness {"path": ["\\f0"], "smtname": "f0", "type": "cell"}
(define-fun |unoptimized#5| ((state |unoptimized_s|)) Bool (= ((_ extract 14 14) state) #b1)) ; $indirect$\c0$unoptimized.v:36$26
(define-fun |unoptimized#6| ((state |unoptimized_s|)) Bool (= ((_ extract 15 15) state) #b1)) ; $indirect$\s0$unoptimized.v:36$25
(define-fun |unoptimized_h f0| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 19 16) state))
; yosys-smt2-cell full_adder f3
; yosys-smt2-witness {"path": ["\\f3"], "smtname": "f3", "type": "cell"}
(define-fun |unoptimized#7| ((state |unoptimized_s|)) Bool (= ((_ extract 20 20) state) #b1)) ; $indirect$\c0$unoptimized.v:41$41
(define-fun |unoptimized#8| ((state |unoptimized_s|)) Bool (= ((_ extract 21 21) state) #b1)) ; $indirect$\s0$unoptimized.v:41$40
(define-fun |unoptimized_h f3| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 25 22) state))
; yosys-smt2-cell half_adder h3
; yosys-smt2-witness {"path": ["\\h3"], "smtname": "h3", "type": "cell"}
(define-fun |unoptimized#9| ((state |unoptimized_s|)) Bool (= ((_ extract 26 26) state) #b1)) ; \c [9]
(define-fun |unoptimized#10| ((state |unoptimized_s|)) Bool (= ((_ extract 27 27) state) #b1)) ; \prod [4]
(define-fun |unoptimized_h h3| ((state |unoptimized_s|)) (_ BitVec 3) ((_ extract 30 28) state))
; yosys-smt2-cell full_adder f6
; yosys-smt2-witness {"path": ["\\f6"], "smtname": "f6", "type": "cell"}
(define-fun |unoptimized#11| ((state |unoptimized_s|)) Bool (= ((_ extract 31 31) state) #b1)) ; \c [10]
(define-fun |unoptimized#12| ((state |unoptimized_s|)) Bool (= ((_ extract 32 32) state) #b1)) ; \prod [5]
(define-fun |unoptimized_h f6| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 36 33) state))
; yosys-smt2-cell full_adder f7
; yosys-smt2-witness {"path": ["\\f7"], "smtname": "f7", "type": "cell"}
(define-fun |unoptimized#13| ((state |unoptimized_s|)) Bool (= ((_ extract 37 37) state) #b1)) ; $indirect$\c0$unoptimized.v:48$56
(define-fun |unoptimized#14| ((state |unoptimized_s|)) Bool (= ((_ extract 38 38) state) #b1)) ; $indirect$\s0$unoptimized.v:48$55
(define-fun |unoptimized_h f7| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 42 39) state))
; yosys-smt2-output prod 8
(define-fun |unoptimized_n prod| ((state |unoptimized_s|)) (_ BitVec 8) (concat (ite (|unoptimized#13| state) #b1 #b0) (concat (ite (|unoptimized#14| state) #b1 #b0) (concat (ite (|unoptimized#12| state) #b1 #b0) (concat (ite (|unoptimized#10| state) #b1 #b0) (concat (ite (|unoptimized#8| state) #b1 #b0) (concat (ite (|unoptimized#6| state) #b1 #b0) (concat (ite (|unoptimized#4| state) #b1 #b0) (|unoptimized#2| state)))))))))
; yosys-smt2-cell full_adder f1
; yosys-smt2-witness {"path": ["\\f1"], "smtname": "f1", "type": "cell"}
(define-fun |unoptimized#15| ((state |unoptimized_s|)) Bool (= ((_ extract 43 43) state) #b1)) ; $indirect$\c0$unoptimized.v:37$31
(define-fun |unoptimized#16| ((state |unoptimized_s|)) Bool (= ((_ extract 44 44) state) #b1)) ; $indirect$\s0$unoptimized.v:37$30
(define-fun |unoptimized_h f1| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 48 45) state))
; yosys-smt2-cell full_adder f2
; yosys-smt2-witness {"path": ["\\f2"], "smtname": "f2", "type": "cell"}
(define-fun |unoptimized#17| ((state |unoptimized_s|)) Bool (= ((_ extract 49 49) state) #b1)) ; $indirect$\c0$unoptimized.v:38$36
(define-fun |unoptimized#18| ((state |unoptimized_s|)) Bool (= ((_ extract 50 50) state) #b1)) ; $indirect$\s0$unoptimized.v:38$35
(define-fun |unoptimized_h f2| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 54 51) state))
; yosys-smt2-cell full_adder f4
; yosys-smt2-witness {"path": ["\\f4"], "smtname": "f4", "type": "cell"}
(define-fun |unoptimized#19| ((state |unoptimized_s|)) Bool (= ((_ extract 55 55) state) #b1)) ; $indirect$\c0$unoptimized.v:42$46
(define-fun |unoptimized#20| ((state |unoptimized_s|)) Bool (= ((_ extract 56 56) state) #b1)) ; $indirect$\s0$unoptimized.v:42$45
(define-fun |unoptimized_h f4| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 60 57) state))
; yosys-smt2-cell full_adder f5
; yosys-smt2-witness {"path": ["\\f5"], "smtname": "f5", "type": "cell"}
(define-fun |unoptimized#21| ((state |unoptimized_s|)) Bool (= ((_ extract 61 61) state) #b1)) ; $indirect$\c0$unoptimized.v:43$51
(define-fun |unoptimized#22| ((state |unoptimized_s|)) Bool (= ((_ extract 62 62) state) #b1)) ; $indirect$\s0$unoptimized.v:43$50
(define-fun |unoptimized_h f5| ((state |unoptimized_s|)) (_ BitVec 4) ((_ extract 66 63) state))
; yosys-smt2-cell half_adder h1
; yosys-smt2-witness {"path": ["\\h1"], "smtname": "h1", "type": "cell"}
(define-fun |unoptimized#23| ((state |unoptimized_s|)) Bool (= ((_ extract 67 67) state) #b1)) ; $indirect$\c0$unoptimized.v:32$17
(define-fun |unoptimized#24| ((state |unoptimized_s|)) Bool (= ((_ extract 68 68) state) #b1)) ; $indirect$\s0$unoptimized.v:32$16
(define-fun |unoptimized_h h1| ((state |unoptimized_s|)) (_ BitVec 3) ((_ extract 71 69) state))
; yosys-smt2-cell half_adder h2
; yosys-smt2-witness {"path": ["\\h2"], "smtname": "h2", "type": "cell"}
(define-fun |unoptimized#25| ((state |unoptimized_s|)) Bool (= ((_ extract 72 72) state) #b1)) ; $indirect$\c0$unoptimized.v:33$21
(define-fun |unoptimized#26| ((state |unoptimized_s|)) Bool (= ((_ extract 73 73) state) #b1)) ; $indirect$\s0$unoptimized.v:33$20
(define-fun |unoptimized_h h2| ((state |unoptimized_s|)) (_ BitVec 3) ((_ extract 76 74) state))
(define-fun |unoptimized#27| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 0 0) (|unoptimized#0| state)) ((_ extract 1 1) (|unoptimized#1| state)))) ; $and$unoptimized.v:23$59_Y
(define-fun |unoptimized#28| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 1 1) (|unoptimized#0| state)) ((_ extract 0 0) (|unoptimized#1| state)))) ; $and$unoptimized.v:22$62_Y
(define-fun |unoptimized#29| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 1 1) (|unoptimized#0| state)) ((_ extract 1 1) (|unoptimized#1| state)))) ; $and$unoptimized.v:23$63_Y
(define-fun |unoptimized#30| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 2 2) (|unoptimized#0| state)) ((_ extract 0 0) (|unoptimized#1| state)))) ; $and$unoptimized.v:22$66_Y
(define-fun |unoptimized#31| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 2 2) (|unoptimized#0| state)) ((_ extract 1 1) (|unoptimized#1| state)))) ; $and$unoptimized.v:23$67_Y
(define-fun |unoptimized#32| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 3 3) (|unoptimized#0| state)) ((_ extract 0 0) (|unoptimized#1| state)))) ; $and$unoptimized.v:22$70_Y
(define-fun |unoptimized#33| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 0 0) (|unoptimized#0| state)) ((_ extract 2 2) (|unoptimized#1| state)))) ; $and$unoptimized.v:24$60_Y
(define-fun |unoptimized#34| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 1 1) (|unoptimized#0| state)) ((_ extract 2 2) (|unoptimized#1| state)))) ; $and$unoptimized.v:24$64_Y
(define-fun |unoptimized#35| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 2 2) (|unoptimized#0| state)) ((_ extract 2 2) (|unoptimized#1| state)))) ; $and$unoptimized.v:24$68_Y
(define-fun |unoptimized#36| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 3 3) (|unoptimized#0| state)) ((_ extract 1 1) (|unoptimized#1| state)))) ; $and$unoptimized.v:23$71_Y
(define-fun |unoptimized#37| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 0 0) (|unoptimized#0| state)) ((_ extract 3 3) (|unoptimized#1| state)))) ; $and$unoptimized.v:25$61_Y
(define-fun |unoptimized#38| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 1 1) (|unoptimized#0| state)) ((_ extract 3 3) (|unoptimized#1| state)))) ; $and$unoptimized.v:25$65_Y
(define-fun |unoptimized#39| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 2 2) (|unoptimized#0| state)) ((_ extract 3 3) (|unoptimized#1| state)))) ; $and$unoptimized.v:25$69_Y
(define-fun |unoptimized#40| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 3 3) (|unoptimized#0| state)) ((_ extract 2 2) (|unoptimized#1| state)))) ; $and$unoptimized.v:24$72_Y
(define-fun |unoptimized#41| ((state |unoptimized_s|)) (_ BitVec 1) (bvand ((_ extract 3 3) (|unoptimized#0| state)) ((_ extract 3 3) (|unoptimized#1| state)))) ; $and$unoptimized.v:25$73_Y
(define-fun |unoptimized_a| ((state |unoptimized_s|)) Bool (and
  (|half_adder_a| (|unoptimized_h h0| state))
  (|half_adder_a| (|unoptimized_h h1| state))
  (|half_adder_a| (|unoptimized_h h2| state))
  (|full_adder_a| (|unoptimized_h f0| state))
  (|full_adder_a| (|unoptimized_h f1| state))
  (|half_adder_a| (|unoptimized_h h3| state))
  (|full_adder_a| (|unoptimized_h f2| state))
  (|full_adder_a| (|unoptimized_h f3| state))
  (|full_adder_a| (|unoptimized_h f4| state))
  (|full_adder_a| (|unoptimized_h f5| state))
  (|full_adder_a| (|unoptimized_h f6| state))
  (|full_adder_a| (|unoptimized_h f7| state))
))
(define-fun |unoptimized_u| ((state |unoptimized_s|)) Bool (and
  (|half_adder_u| (|unoptimized_h h0| state))
  (|half_adder_u| (|unoptimized_h h1| state))
  (|half_adder_u| (|unoptimized_h h2| state))
  (|full_adder_u| (|unoptimized_h f0| state))
  (|full_adder_u| (|unoptimized_h f1| state))
  (|half_adder_u| (|unoptimized_h h3| state))
  (|full_adder_u| (|unoptimized_h f2| state))
  (|full_adder_u| (|unoptimized_h f3| state))
  (|full_adder_u| (|unoptimized_h f4| state))
  (|full_adder_u| (|unoptimized_h f5| state))
  (|full_adder_u| (|unoptimized_h f6| state))
  (|full_adder_u| (|unoptimized_h f7| state))
))
(define-fun |unoptimized_i| ((state |unoptimized_s|)) Bool (and
  (|half_adder_i| (|unoptimized_h h0| state))
  (|half_adder_i| (|unoptimized_h h1| state))
  (|half_adder_i| (|unoptimized_h h2| state))
  (|full_adder_i| (|unoptimized_h f0| state))
  (|full_adder_i| (|unoptimized_h f1| state))
  (|half_adder_i| (|unoptimized_h h3| state))
  (|full_adder_i| (|unoptimized_h f2| state))
  (|full_adder_i| (|unoptimized_h f3| state))
  (|full_adder_i| (|unoptimized_h f4| state))
  (|full_adder_i| (|unoptimized_h f5| state))
  (|full_adder_i| (|unoptimized_h f6| state))
  (|full_adder_i| (|unoptimized_h f7| state))
))
(define-fun |unoptimized_h| ((state |unoptimized_s|)) Bool (and
  (= (|unoptimized_is| state) (|half_adder_is| (|unoptimized_h h0| state)))
  (= (= ((_ extract 0 0) (|unoptimized#27| state)) #b1) (|half_adder_n a| (|unoptimized_h h0| state))) ; half_adder.a
  (= (= ((_ extract 0 0) (|unoptimized#28| state)) #b1) (|half_adder_n b| (|unoptimized_h h0| state))) ; half_adder.b
  (= (|unoptimized#3| state) (|half_adder_n c0| (|unoptimized_h h0| state))) ; half_adder.c0
  (= (|unoptimized#4| state) (|half_adder_n s0| (|unoptimized_h h0| state))) ; half_adder.s0
  (= (|unoptimized_is| state) (|half_adder_is| (|unoptimized_h h1| state)))
  (= (= ((_ extract 0 0) (|unoptimized#29| state)) #b1) (|half_adder_n a| (|unoptimized_h h1| state))) ; half_adder.a
  (= (= ((_ extract 0 0) (|unoptimized#30| state)) #b1) (|half_adder_n b| (|unoptimized_h h1| state))) ; half_adder.b
  (= (|unoptimized#23| state) (|half_adder_n c0| (|unoptimized_h h1| state))) ; half_adder.c0
  (= (|unoptimized#24| state) (|half_adder_n s0| (|unoptimized_h h1| state))) ; half_adder.s0
  (= (|unoptimized_is| state) (|half_adder_is| (|unoptimized_h h2| state)))
  (= (= ((_ extract 0 0) (|unoptimized#31| state)) #b1) (|half_adder_n a| (|unoptimized_h h2| state))) ; half_adder.a
  (= (= ((_ extract 0 0) (|unoptimized#32| state)) #b1) (|half_adder_n b| (|unoptimized_h h2| state))) ; half_adder.b
  (= (|unoptimized#25| state) (|half_adder_n c0| (|unoptimized_h h2| state))) ; half_adder.c0
  (= (|unoptimized#26| state) (|half_adder_n s0| (|unoptimized_h h2| state))) ; half_adder.s0
  (= (|unoptimized_is| state) (|full_adder_is| (|unoptimized_h f0| state)))
  (= (= ((_ extract 0 0) (|unoptimized#33| state)) #b1) (|full_adder_n a| (|unoptimized_h f0| state))) ; full_adder.a
  (= (|unoptimized#3| state) (|full_adder_n b| (|unoptimized_h f0| state))) ; full_adder.b
  (= (|unoptimized#5| state) (|full_adder_n c0| (|unoptimized_h f0| state))) ; full_adder.c0
  (= (|unoptimized#24| state) (|full_adder_n cin| (|unoptimized_h f0| state))) ; full_adder.cin
  (= (|unoptimized#6| state) (|full_adder_n s0| (|unoptimized_h f0| state))) ; full_adder.s0
  (= (|unoptimized_is| state) (|full_adder_is| (|unoptimized_h f1| state)))
  (= (= ((_ extract 0 0) (|unoptimized#34| state)) #b1) (|full_adder_n a| (|unoptimized_h f1| state))) ; full_adder.a
  (= (|unoptimized#23| state) (|full_adder_n b| (|unoptimized_h f1| state))) ; full_adder.b
  (= (|unoptimized#15| state) (|full_adder_n c0| (|unoptimized_h f1| state))) ; full_adder.c0
  (= (|unoptimized#26| state) (|full_adder_n cin| (|unoptimized_h f1| state))) ; full_adder.cin
  (= (|unoptimized#16| state) (|full_adder_n s0| (|unoptimized_h f1| state))) ; full_adder.s0
  (= (|unoptimized_is| state) (|half_adder_is| (|unoptimized_h h3| state)))
  (= (|unoptimized#7| state) (|half_adder_n a| (|unoptimized_h h3| state))) ; half_adder.a
  (= (|unoptimized#20| state) (|half_adder_n b| (|unoptimized_h h3| state))) ; half_adder.b
  (= (|unoptimized#9| state) (|half_adder_n c0| (|unoptimized_h h3| state))) ; half_adder.c0
  (= (|unoptimized#10| state) (|half_adder_n s0| (|unoptimized_h h3| state))) ; half_adder.s0
  (= (|unoptimized_is| state) (|full_adder_is| (|unoptimized_h f2| state)))
  (= (= ((_ extract 0 0) (|unoptimized#35| state)) #b1) (|full_adder_n a| (|unoptimized_h f2| state))) ; full_adder.a
  (= (|unoptimized#25| state) (|full_adder_n b| (|unoptimized_h f2| state))) ; full_adder.b
  (= (|unoptimized#17| state) (|full_adder_n c0| (|unoptimized_h f2| state))) ; full_adder.c0
  (= (= ((_ extract 0 0) (|unoptimized#36| state)) #b1) (|full_adder_n cin| (|unoptimized_h f2| state))) ; full_adder.cin
  (= (|unoptimized#18| state) (|full_adder_n s0| (|unoptimized_h f2| state))) ; full_adder.s0
  (= (|unoptimized_is| state) (|full_adder_is| (|unoptimized_h f3| state)))
  (= (= ((_ extract 0 0) (|unoptimized#37| state)) #b1) (|full_adder_n a| (|unoptimized_h f3| state))) ; full_adder.a
  (= (|unoptimized#5| state) (|full_adder_n b| (|unoptimized_h f3| state))) ; full_adder.b
  (= (|unoptimized#7| state) (|full_adder_n c0| (|unoptimized_h f3| state))) ; full_adder.c0
  (= (|unoptimized#16| state) (|full_adder_n cin| (|unoptimized_h f3| state))) ; full_adder.cin
  (= (|unoptimized#8| state) (|full_adder_n s0| (|unoptimized_h f3| state))) ; full_adder.s0
  (= (|unoptimized_is| state) (|full_adder_is| (|unoptimized_h f4| state)))
  (= (= ((_ extract 0 0) (|unoptimized#38| state)) #b1) (|full_adder_n a| (|unoptimized_h f4| state))) ; full_adder.a
  (= (|unoptimized#15| state) (|full_adder_n b| (|unoptimized_h f4| state))) ; full_adder.b
  (= (|unoptimized#19| state) (|full_adder_n c0| (|unoptimized_h f4| state))) ; full_adder.c0
  (= (|unoptimized#18| state) (|full_adder_n cin| (|unoptimized_h f4| state))) ; full_adder.cin
  (= (|unoptimized#20| state) (|full_adder_n s0| (|unoptimized_h f4| state))) ; full_adder.s0
  (= (|unoptimized_is| state) (|full_adder_is| (|unoptimized_h f5| state)))
  (= (= ((_ extract 0 0) (|unoptimized#39| state)) #b1) (|full_adder_n a| (|unoptimized_h f5| state))) ; full_adder.a
  (= (|unoptimized#17| state) (|full_adder_n b| (|unoptimized_h f5| state))) ; full_adder.b
  (= (|unoptimized#21| state) (|full_adder_n c0| (|unoptimized_h f5| state))) ; full_adder.c0
  (= (= ((_ extract 0 0) (|unoptimized#40| state)) #b1) (|full_adder_n cin| (|unoptimized_h f5| state))) ; full_adder.cin
  (= (|unoptimized#22| state) (|full_adder_n s0| (|unoptimized_h f5| state))) ; full_adder.s0
  (= (|unoptimized_is| state) (|full_adder_is| (|unoptimized_h f6| state)))
  (= (|unoptimized#9| state) (|full_adder_n a| (|unoptimized_h f6| state))) ; full_adder.a
  (= (|unoptimized#19| state) (|full_adder_n b| (|unoptimized_h f6| state))) ; full_adder.b
  (= (|unoptimized#11| state) (|full_adder_n c0| (|unoptimized_h f6| state))) ; full_adder.c0
  (= (|unoptimized#22| state) (|full_adder_n cin| (|unoptimized_h f6| state))) ; full_adder.cin
  (= (|unoptimized#12| state) (|full_adder_n s0| (|unoptimized_h f6| state))) ; full_adder.s0
  (= (|unoptimized_is| state) (|full_adder_is| (|unoptimized_h f7| state)))
  (= (|unoptimized#11| state) (|full_adder_n a| (|unoptimized_h f7| state))) ; full_adder.a
  (= (|unoptimized#21| state) (|full_adder_n b| (|unoptimized_h f7| state))) ; full_adder.b
  (= (|unoptimized#13| state) (|full_adder_n c0| (|unoptimized_h f7| state))) ; full_adder.c0
  (= (= ((_ extract 0 0) (|unoptimized#41| state)) #b1) (|full_adder_n cin| (|unoptimized_h f7| state))) ; full_adder.cin
  (= (|unoptimized#14| state) (|full_adder_n s0| (|unoptimized_h f7| state))) ; full_adder.s0
  (|half_adder_h| (|unoptimized_h h0| state))
  (|half_adder_h| (|unoptimized_h h1| state))
  (|half_adder_h| (|unoptimized_h h2| state))
  (|full_adder_h| (|unoptimized_h f0| state))
  (|full_adder_h| (|unoptimized_h f1| state))
  (|half_adder_h| (|unoptimized_h h3| state))
  (|full_adder_h| (|unoptimized_h f2| state))
  (|full_adder_h| (|unoptimized_h f3| state))
  (|full_adder_h| (|unoptimized_h f4| state))
  (|full_adder_h| (|unoptimized_h f5| state))
  (|full_adder_h| (|unoptimized_h f6| state))
  (|full_adder_h| (|unoptimized_h f7| state))
))
(define-fun |unoptimized_t| ((state |unoptimized_s|) (next_state |unoptimized_s|)) Bool (and
  (|half_adder_t| (|unoptimized_h h0| state) (|unoptimized_h h0| next_state))
  (|half_adder_t| (|unoptimized_h h1| state) (|unoptimized_h h1| next_state))
  (|half_adder_t| (|unoptimized_h h2| state) (|unoptimized_h h2| next_state))
  (|full_adder_t| (|unoptimized_h f0| state) (|unoptimized_h f0| next_state))
  (|full_adder_t| (|unoptimized_h f1| state) (|unoptimized_h f1| next_state))
  (|half_adder_t| (|unoptimized_h h3| state) (|unoptimized_h h3| next_state))
  (|full_adder_t| (|unoptimized_h f2| state) (|unoptimized_h f2| next_state))
  (|full_adder_t| (|unoptimized_h f3| state) (|unoptimized_h f3| next_state))
  (|full_adder_t| (|unoptimized_h f4| state) (|unoptimized_h f4| next_state))
  (|full_adder_t| (|unoptimized_h f5| state) (|unoptimized_h f5| next_state))
  (|full_adder_t| (|unoptimized_h f6| state) (|unoptimized_h f6| next_state))
  (|full_adder_t| (|unoptimized_h f7| state) (|unoptimized_h f7| next_state))
)) ; end of module unoptimized
; yosys-smt2-module optimized
(define-sort |optimized_s| () (_ BitVec 91))
(define-fun |optimized_is| ((state |optimized_s|)) Bool (= ((_ extract 0 0) state) #b1))
(define-fun |optimized#0| ((state |optimized_s|)) (_ BitVec 4) ((_ extract 4 1) state)) ; \A
; yosys-smt2-input A 4
; yosys-smt2-witness {"offset": 0, "path": ["\\A"], "smtname": "A", "smtoffset": 0, "type": "input", "width": 4}
(define-fun |optimized_n A| ((state |optimized_s|)) (_ BitVec 4) (|optimized#0| state))
(define-fun |optimized#1| ((state |optimized_s|)) (_ BitVec 4) ((_ extract 8 5) state)) ; \B
; yosys-smt2-input B 4
; yosys-smt2-witness {"offset": 0, "path": ["\\B"], "smtname": "B", "smtoffset": 0, "type": "input", "width": 4}
(define-fun |optimized_n B| ((state |optimized_s|)) (_ BitVec 4) (|optimized#1| state))
(define-fun |optimized#2| ((state |optimized_s|)) (_ BitVec 7) (bvand (concat #b000 (|optimized#0| state)) (concat #b000 (concat ((_ extract 0 0) (|optimized#1| state)) (concat ((_ extract 0 0) (|optimized#1| state)) (concat ((_ extract 0 0) (|optimized#1| state)) ((_ extract 0 0) (|optimized#1| state)))))))) ; \p0
; yosys-smt2-cell optimized_half_adder ha11
; yosys-smt2-witness {"path": ["\\ha11"], "smtname": "ha11", "type": "cell"}
(define-fun |optimized#3| ((state |optimized_s|)) Bool (= ((_ extract 9 9) state) #b1)) ; \c11
(define-fun |optimized#4| ((state |optimized_s|)) Bool (= ((_ extract 10 10) state) #b1)) ; \s11
(define-fun |optimized_h ha11| ((state |optimized_s|)) (_ BitVec 3) ((_ extract 13 11) state))
; yosys-smt2-cell optimized_half_adder ha22
; yosys-smt2-witness {"path": ["\\ha22"], "smtname": "ha22", "type": "cell"}
(define-fun |optimized#5| ((state |optimized_s|)) Bool (= ((_ extract 14 14) state) #b1)) ; \c22
(define-fun |optimized#6| ((state |optimized_s|)) Bool (= ((_ extract 15 15) state) #b1)) ; \s22
(define-fun |optimized_h ha22| ((state |optimized_s|)) (_ BitVec 3) ((_ extract 18 16) state))
; yosys-smt2-cell optimized_half_adder ha32
; yosys-smt2-witness {"path": ["\\ha32"], "smtname": "ha32", "type": "cell"}
(define-fun |optimized#7| ((state |optimized_s|)) Bool (= ((_ extract 19 19) state) #b1)) ; \c32
(define-fun |optimized#8| ((state |optimized_s|)) Bool (= ((_ extract 20 20) state) #b1)) ; \s32
(define-fun |optimized_h ha32| ((state |optimized_s|)) (_ BitVec 3) ((_ extract 23 21) state))
; yosys-smt2-cell optimized_half_adder ha34
; yosys-smt2-witness {"path": ["\\ha34"], "smtname": "ha34", "type": "cell"}
(define-fun |optimized#9| ((state |optimized_s|)) Bool (= ((_ extract 24 24) state) #b1)) ; \c34
(define-fun |optimized#10| ((state |optimized_s|)) Bool (= ((_ extract 25 25) state) #b1)) ; \s34
(define-fun |optimized_h ha34| ((state |optimized_s|)) (_ BitVec 3) ((_ extract 28 26) state))
; yosys-smt2-cell optimized_half_adder ha35
; yosys-smt2-witness {"path": ["\\ha35"], "smtname": "ha35", "type": "cell"}
(define-fun |optimized#11| ((state |optimized_s|)) Bool (= ((_ extract 29 29) state) #b1)) ; \c35
(define-fun |optimized#12| ((state |optimized_s|)) Bool (= ((_ extract 30 30) state) #b1)) ; \s35
(define-fun |optimized_h ha35| ((state |optimized_s|)) (_ BitVec 3) ((_ extract 33 31) state))
; yosys-smt2-cell optimized_half_adder ha36
; yosys-smt2-witness {"path": ["\\ha36"], "smtname": "ha36", "type": "cell"}
(define-fun |optimized#13| ((state |optimized_s|)) Bool (= ((_ extract 34 34) state) #b1)) ; \c36
(define-fun |optimized#14| ((state |optimized_s|)) Bool (= ((_ extract 35 35) state) #b1)) ; \s36
(define-fun |optimized_h ha36| ((state |optimized_s|)) (_ BitVec 3) ((_ extract 38 36) state))
; yosys-smt2-cell optimized_half_adder ha37
; yosys-smt2-witness {"path": ["\\ha37"], "smtname": "ha37", "type": "cell"}
(define-fun |optimized#15| ((state |optimized_s|)) Bool (= ((_ extract 39 39) state) #b1)) ; \c37
(define-fun |optimized#16| ((state |optimized_s|)) Bool (= ((_ extract 40 40) state) #b1)) ; \s37
(define-fun |optimized_h ha37| ((state |optimized_s|)) (_ BitVec 3) ((_ extract 43 41) state))
; yosys-smt2-output prod 8
(define-fun |optimized_n prod| ((state |optimized_s|)) (_ BitVec 8) (concat (ite (|optimized#16| state) #b1 #b0) (concat (ite (|optimized#14| state) #b1 #b0) (concat (ite (|optimized#12| state) #b1 #b0) (concat (ite (|optimized#10| state) #b1 #b0) (concat (ite (|optimized#8| state) #b1 #b0) (concat (ite (|optimized#6| state) #b1 #b0) (concat (ite (|optimized#4| state) #b1 #b0) ((_ extract 0 0) (|optimized#2| state))))))))))
; yosys-smt2-cell optimized_full_adder fa12
; yosys-smt2-witness {"path": ["\\fa12"], "smtname": "fa12", "type": "cell"}
(define-fun |optimized#17| ((state |optimized_s|)) Bool (= ((_ extract 44 44) state) #b1)) ; \c12
(define-fun |optimized#18| ((state |optimized_s|)) Bool (= ((_ extract 45 45) state) #b1)) ; \s12
(define-fun |optimized_h fa12| ((state |optimized_s|)) (_ BitVec 4) ((_ extract 49 46) state))
; yosys-smt2-cell optimized_full_adder fa13
; yosys-smt2-witness {"path": ["\\fa13"], "smtname": "fa13", "type": "cell"}
(define-fun |optimized#19| ((state |optimized_s|)) Bool (= ((_ extract 50 50) state) #b1)) ; \c13
(define-fun |optimized#20| ((state |optimized_s|)) Bool (= ((_ extract 51 51) state) #b1)) ; \s13
(define-fun |optimized_h fa13| ((state |optimized_s|)) (_ BitVec 4) ((_ extract 55 52) state))
; yosys-smt2-cell optimized_full_adder fa14
; yosys-smt2-witness {"path": ["\\fa14"], "smtname": "fa14", "type": "cell"}
(define-fun |optimized#21| ((state |optimized_s|)) Bool (= ((_ extract 56 56) state) #b1)) ; \c14
(define-fun |optimized#22| ((state |optimized_s|)) Bool (= ((_ extract 57 57) state) #b1)) ; \s14
(define-fun |optimized_h fa14| ((state |optimized_s|)) (_ BitVec 4) ((_ extract 61 58) state))
; yosys-smt2-cell optimized_full_adder fa23
; yosys-smt2-witness {"path": ["\\fa23"], "smtname": "fa23", "type": "cell"}
(define-fun |optimized#23| ((state |optimized_s|)) Bool (= ((_ extract 62 62) state) #b1)) ; \c23
(define-fun |optimized#24| ((state |optimized_s|)) Bool (= ((_ extract 63 63) state) #b1)) ; \s23
(define-fun |optimized_h fa23| ((state |optimized_s|)) (_ BitVec 4) ((_ extract 67 64) state))
; yosys-smt2-cell optimized_full_adder fa24
; yosys-smt2-witness {"path": ["\\fa24"], "smtname": "fa24", "type": "cell"}
(define-fun |optimized#25| ((state |optimized_s|)) Bool (= ((_ extract 68 68) state) #b1)) ; \c24
(define-fun |optimized#26| ((state |optimized_s|)) Bool (= ((_ extract 69 69) state) #b1)) ; \s24
(define-fun |optimized_h fa24| ((state |optimized_s|)) (_ BitVec 4) ((_ extract 73 70) state))
; yosys-smt2-cell optimized_full_adder fa25
; yosys-smt2-witness {"path": ["\\fa25"], "smtname": "fa25", "type": "cell"}
(define-fun |optimized#27| ((state |optimized_s|)) Bool (= ((_ extract 74 74) state) #b1)) ; \c25
(define-fun |optimized#28| ((state |optimized_s|)) Bool (= ((_ extract 75 75) state) #b1)) ; \s25
(define-fun |optimized_h fa25| ((state |optimized_s|)) (_ BitVec 4) ((_ extract 79 76) state))
; yosys-smt2-cell optimized_full_adder fa26
; yosys-smt2-witness {"path": ["\\fa26"], "smtname": "fa26", "type": "cell"}
(define-fun |optimized#29| ((state |optimized_s|)) Bool (= ((_ extract 80 80) state) #b1)) ; \c26
(define-fun |optimized#30| ((state |optimized_s|)) Bool (= ((_ extract 81 81) state) #b1)) ; \s26
(define-fun |optimized_h fa26| ((state |optimized_s|)) (_ BitVec 4) ((_ extract 85 82) state))
; yosys-smt2-cell optimized_half_adder ha15
; yosys-smt2-witness {"path": ["\\ha15"], "smtname": "ha15", "type": "cell"}
(define-fun |optimized#31| ((state |optimized_s|)) Bool (= ((_ extract 86 86) state) #b1)) ; \c15
(define-fun |optimized#32| ((state |optimized_s|)) Bool (= ((_ extract 87 87) state) #b1)) ; \s15
(define-fun |optimized_h ha15| ((state |optimized_s|)) (_ BitVec 3) ((_ extract 90 88) state))
(define-fun |optimized#33| ((state |optimized_s|)) (_ BitVec 7) (bvand (concat #b000 (|optimized#0| state)) (concat #b000 (concat ((_ extract 1 1) (|optimized#1| state)) (concat ((_ extract 1 1) (|optimized#1| state)) (concat ((_ extract 1 1) (|optimized#1| state)) ((_ extract 1 1) (|optimized#1| state)))))))) ; \p1
(define-fun |optimized#34| ((state |optimized_s|)) (_ BitVec 7) (bvand (concat #b000 (|optimized#0| state)) (concat #b000 (concat ((_ extract 2 2) (|optimized#1| state)) (concat ((_ extract 2 2) (|optimized#1| state)) (concat ((_ extract 2 2) (|optimized#1| state)) ((_ extract 2 2) (|optimized#1| state)))))))) ; \p2
(define-fun |optimized#35| ((state |optimized_s|)) (_ BitVec 7) (bvand (concat #b000 (|optimized#0| state)) (concat #b000 (concat ((_ extract 3 3) (|optimized#1| state)) (concat ((_ extract 3 3) (|optimized#1| state)) (concat ((_ extract 3 3) (|optimized#1| state)) ((_ extract 3 3) (|optimized#1| state)))))))) ; \p3
(define-fun |optimized_a| ((state |optimized_s|)) Bool (and
  (|optimized_half_adder_a| (|optimized_h ha11| state))
  (|optimized_half_adder_a| (|optimized_h ha22| state))
  (|optimized_full_adder_a| (|optimized_h fa12| state))
  (|optimized_full_adder_a| (|optimized_h fa13| state))
  (|optimized_full_adder_a| (|optimized_h fa14| state))
  (|optimized_half_adder_a| (|optimized_h ha15| state))
  (|optimized_full_adder_a| (|optimized_h fa23| state))
  (|optimized_full_adder_a| (|optimized_h fa24| state))
  (|optimized_full_adder_a| (|optimized_h fa25| state))
  (|optimized_full_adder_a| (|optimized_h fa26| state))
  (|optimized_half_adder_a| (|optimized_h ha32| state))
  (|optimized_half_adder_a| (|optimized_h ha34| state))
  (|optimized_half_adder_a| (|optimized_h ha35| state))
  (|optimized_half_adder_a| (|optimized_h ha36| state))
  (|optimized_half_adder_a| (|optimized_h ha37| state))
))
(define-fun |optimized_u| ((state |optimized_s|)) Bool (and
  (|optimized_half_adder_u| (|optimized_h ha11| state))
  (|optimized_half_adder_u| (|optimized_h ha22| state))
  (|optimized_full_adder_u| (|optimized_h fa12| state))
  (|optimized_full_adder_u| (|optimized_h fa13| state))
  (|optimized_full_adder_u| (|optimized_h fa14| state))
  (|optimized_half_adder_u| (|optimized_h ha15| state))
  (|optimized_full_adder_u| (|optimized_h fa23| state))
  (|optimized_full_adder_u| (|optimized_h fa24| state))
  (|optimized_full_adder_u| (|optimized_h fa25| state))
  (|optimized_full_adder_u| (|optimized_h fa26| state))
  (|optimized_half_adder_u| (|optimized_h ha32| state))
  (|optimized_half_adder_u| (|optimized_h ha34| state))
  (|optimized_half_adder_u| (|optimized_h ha35| state))
  (|optimized_half_adder_u| (|optimized_h ha36| state))
  (|optimized_half_adder_u| (|optimized_h ha37| state))
))
(define-fun |optimized_i| ((state |optimized_s|)) Bool (and
  (|optimized_half_adder_i| (|optimized_h ha11| state))
  (|optimized_half_adder_i| (|optimized_h ha22| state))
  (|optimized_full_adder_i| (|optimized_h fa12| state))
  (|optimized_full_adder_i| (|optimized_h fa13| state))
  (|optimized_full_adder_i| (|optimized_h fa14| state))
  (|optimized_half_adder_i| (|optimized_h ha15| state))
  (|optimized_full_adder_i| (|optimized_h fa23| state))
  (|optimized_full_adder_i| (|optimized_h fa24| state))
  (|optimized_full_adder_i| (|optimized_h fa25| state))
  (|optimized_full_adder_i| (|optimized_h fa26| state))
  (|optimized_half_adder_i| (|optimized_h ha32| state))
  (|optimized_half_adder_i| (|optimized_h ha34| state))
  (|optimized_half_adder_i| (|optimized_h ha35| state))
  (|optimized_half_adder_i| (|optimized_h ha36| state))
  (|optimized_half_adder_i| (|optimized_h ha37| state))
))
(define-fun |optimized_h| ((state |optimized_s|)) Bool (and
  (= (|optimized_is| state) (|optimized_half_adder_is| (|optimized_h ha11| state)))
  (= (= ((_ extract 1 1) (|optimized#2| state)) #b1) (|optimized_half_adder_n a| (|optimized_h ha11| state))) ; optimized_half_adder.a
  (= (= ((_ extract 0 0) (|optimized#33| state)) #b1) (|optimized_half_adder_n b| (|optimized_h ha11| state))) ; optimized_half_adder.b
  (= (|optimized#3| state) (|optimized_half_adder_n c0| (|optimized_h ha11| state))) ; optimized_half_adder.c0
  (= (|optimized#4| state) (|optimized_half_adder_n s0| (|optimized_h ha11| state))) ; optimized_half_adder.s0
  (= (|optimized_is| state) (|optimized_half_adder_is| (|optimized_h ha22| state)))
  (= (|optimized#3| state) (|optimized_half_adder_n a| (|optimized_h ha22| state))) ; optimized_half_adder.a
  (= (|optimized#18| state) (|optimized_half_adder_n b| (|optimized_h ha22| state))) ; optimized_half_adder.b
  (= (|optimized#5| state) (|optimized_half_adder_n c0| (|optimized_h ha22| state))) ; optimized_half_adder.c0
  (= (|optimized#6| state) (|optimized_half_adder_n s0| (|optimized_h ha22| state))) ; optimized_half_adder.s0
  (= (|optimized_is| state) (|optimized_full_adder_is| (|optimized_h fa12| state)))
  (= (= ((_ extract 2 2) (|optimized#2| state)) #b1) (|optimized_full_adder_n a| (|optimized_h fa12| state))) ; optimized_full_adder.a
  (= (= ((_ extract 1 1) (|optimized#33| state)) #b1) (|optimized_full_adder_n b| (|optimized_h fa12| state))) ; optimized_full_adder.b
  (= (|optimized#17| state) (|optimized_full_adder_n c0| (|optimized_h fa12| state))) ; optimized_full_adder.c0
  (= (= ((_ extract 0 0) (|optimized#34| state)) #b1) (|optimized_full_adder_n cin| (|optimized_h fa12| state))) ; optimized_full_adder.cin
  (= (|optimized#18| state) (|optimized_full_adder_n s0| (|optimized_h fa12| state))) ; optimized_full_adder.s0
  (= (|optimized_is| state) (|optimized_full_adder_is| (|optimized_h fa13| state)))
  (= (= ((_ extract 3 3) (|optimized#2| state)) #b1) (|optimized_full_adder_n a| (|optimized_h fa13| state))) ; optimized_full_adder.a
  (= (= ((_ extract 2 2) (|optimized#33| state)) #b1) (|optimized_full_adder_n b| (|optimized_h fa13| state))) ; optimized_full_adder.b
  (= (|optimized#19| state) (|optimized_full_adder_n c0| (|optimized_h fa13| state))) ; optimized_full_adder.c0
  (= (= ((_ extract 1 1) (|optimized#34| state)) #b1) (|optimized_full_adder_n cin| (|optimized_h fa13| state))) ; optimized_full_adder.cin
  (= (|optimized#20| state) (|optimized_full_adder_n s0| (|optimized_h fa13| state))) ; optimized_full_adder.s0
  (= (|optimized_is| state) (|optimized_full_adder_is| (|optimized_h fa14| state)))
  (= (= ((_ extract 3 3) (|optimized#33| state)) #b1) (|optimized_full_adder_n a| (|optimized_h fa14| state))) ; optimized_full_adder.a
  (= (= ((_ extract 2 2) (|optimized#34| state)) #b1) (|optimized_full_adder_n b| (|optimized_h fa14| state))) ; optimized_full_adder.b
  (= (|optimized#21| state) (|optimized_full_adder_n c0| (|optimized_h fa14| state))) ; optimized_full_adder.c0
  (= (= ((_ extract 1 1) (|optimized#35| state)) #b1) (|optimized_full_adder_n cin| (|optimized_h fa14| state))) ; optimized_full_adder.cin
  (= (|optimized#22| state) (|optimized_full_adder_n s0| (|optimized_h fa14| state))) ; optimized_full_adder.s0
  (= (|optimized_is| state) (|optimized_half_adder_is| (|optimized_h ha15| state)))
  (= (= ((_ extract 3 3) (|optimized#34| state)) #b1) (|optimized_half_adder_n a| (|optimized_h ha15| state))) ; optimized_half_adder.a
  (= (= ((_ extract 2 2) (|optimized#35| state)) #b1) (|optimized_half_adder_n b| (|optimized_h ha15| state))) ; optimized_half_adder.b
  (= (|optimized#31| state) (|optimized_half_adder_n c0| (|optimized_h ha15| state))) ; optimized_half_adder.c0
  (= (|optimized#32| state) (|optimized_half_adder_n s0| (|optimized_h ha15| state))) ; optimized_half_adder.s0
  (= (|optimized_is| state) (|optimized_full_adder_is| (|optimized_h fa23| state)))
  (= (= ((_ extract 0 0) (|optimized#35| state)) #b1) (|optimized_full_adder_n a| (|optimized_h fa23| state))) ; optimized_full_adder.a
  (= (|optimized#17| state) (|optimized_full_adder_n b| (|optimized_h fa23| state))) ; optimized_full_adder.b
  (= (|optimized#23| state) (|optimized_full_adder_n c0| (|optimized_h fa23| state))) ; optimized_full_adder.c0
  (= (|optimized#20| state) (|optimized_full_adder_n cin| (|optimized_h fa23| state))) ; optimized_full_adder.cin
  (= (|optimized#24| state) (|optimized_full_adder_n s0| (|optimized_h fa23| state))) ; optimized_full_adder.s0
  (= (|optimized_is| state) (|optimized_full_adder_is| (|optimized_h fa24| state)))
  (= (|optimized#19| state) (|optimized_full_adder_n a| (|optimized_h fa24| state))) ; optimized_full_adder.a
  (= (|optimized#7| state) (|optimized_full_adder_n b| (|optimized_h fa24| state))) ; optimized_full_adder.b
  (= (|optimized#25| state) (|optimized_full_adder_n c0| (|optimized_h fa24| state))) ; optimized_full_adder.c0
  (= (|optimized#22| state) (|optimized_full_adder_n cin| (|optimized_h fa24| state))) ; optimized_full_adder.cin
  (= (|optimized#26| state) (|optimized_full_adder_n s0| (|optimized_h fa24| state))) ; optimized_full_adder.s0
  (= (|optimized_is| state) (|optimized_full_adder_is| (|optimized_h fa25| state)))
  (= (|optimized#21| state) (|optimized_full_adder_n a| (|optimized_h fa25| state))) ; optimized_full_adder.a
  (= (|optimized#25| state) (|optimized_full_adder_n b| (|optimized_h fa25| state))) ; optimized_full_adder.b
  (= (|optimized#27| state) (|optimized_full_adder_n c0| (|optimized_h fa25| state))) ; optimized_full_adder.c0
  (= (|optimized#32| state) (|optimized_full_adder_n cin| (|optimized_h fa25| state))) ; optimized_full_adder.cin
  (= (|optimized#28| state) (|optimized_full_adder_n s0| (|optimized_h fa25| state))) ; optimized_full_adder.s0
  (= (|optimized_is| state) (|optimized_full_adder_is| (|optimized_h fa26| state)))
  (= (|optimized#31| state) (|optimized_full_adder_n a| (|optimized_h fa26| state))) ; optimized_full_adder.a
  (= (|optimized#27| state) (|optimized_full_adder_n b| (|optimized_h fa26| state))) ; optimized_full_adder.b
  (= (|optimized#29| state) (|optimized_full_adder_n c0| (|optimized_h fa26| state))) ; optimized_full_adder.c0
  (= (= ((_ extract 3 3) (|optimized#35| state)) #b1) (|optimized_full_adder_n cin| (|optimized_h fa26| state))) ; optimized_full_adder.cin
  (= (|optimized#30| state) (|optimized_full_adder_n s0| (|optimized_h fa26| state))) ; optimized_full_adder.s0
  (= (|optimized_is| state) (|optimized_half_adder_is| (|optimized_h ha32| state)))
  (= (|optimized#5| state) (|optimized_half_adder_n a| (|optimized_h ha32| state))) ; optimized_half_adder.a
  (= (|optimized#24| state) (|optimized_half_adder_n b| (|optimized_h ha32| state))) ; optimized_half_adder.b
  (= (|optimized#7| state) (|optimized_half_adder_n c0| (|optimized_h ha32| state))) ; optimized_half_adder.c0
  (= (|optimized#8| state) (|optimized_half_adder_n s0| (|optimized_h ha32| state))) ; optimized_half_adder.s0
  (= (|optimized_is| state) (|optimized_half_adder_is| (|optimized_h ha34| state)))
  (= (|optimized#23| state) (|optimized_half_adder_n a| (|optimized_h ha34| state))) ; optimized_half_adder.a
  (= (|optimized#26| state) (|optimized_half_adder_n b| (|optimized_h ha34| state))) ; optimized_half_adder.b
  (= (|optimized#9| state) (|optimized_half_adder_n c0| (|optimized_h ha34| state))) ; optimized_half_adder.c0
  (= (|optimized#10| state) (|optimized_half_adder_n s0| (|optimized_h ha34| state))) ; optimized_half_adder.s0
  (= (|optimized_is| state) (|optimized_half_adder_is| (|optimized_h ha35| state)))
  (= (|optimized#9| state) (|optimized_half_adder_n a| (|optimized_h ha35| state))) ; optimized_half_adder.a
  (= (|optimized#28| state) (|optimized_half_adder_n b| (|optimized_h ha35| state))) ; optimized_half_adder.b
  (= (|optimized#11| state) (|optimized_half_adder_n c0| (|optimized_h ha35| state))) ; optimized_half_adder.c0
  (= (|optimized#12| state) (|optimized_half_adder_n s0| (|optimized_h ha35| state))) ; optimized_half_adder.s0
  (= (|optimized_is| state) (|optimized_half_adder_is| (|optimized_h ha36| state)))
  (= (|optimized#11| state) (|optimized_half_adder_n a| (|optimized_h ha36| state))) ; optimized_half_adder.a
  (= (|optimized#30| state) (|optimized_half_adder_n b| (|optimized_h ha36| state))) ; optimized_half_adder.b
  (= (|optimized#13| state) (|optimized_half_adder_n c0| (|optimized_h ha36| state))) ; optimized_half_adder.c0
  (= (|optimized#14| state) (|optimized_half_adder_n s0| (|optimized_h ha36| state))) ; optimized_half_adder.s0
  (= (|optimized_is| state) (|optimized_half_adder_is| (|optimized_h ha37| state)))
  (= (|optimized#13| state) (|optimized_half_adder_n a| (|optimized_h ha37| state))) ; optimized_half_adder.a
  (= (|optimized#29| state) (|optimized_half_adder_n b| (|optimized_h ha37| state))) ; optimized_half_adder.b
  (= (|optimized#15| state) (|optimized_half_adder_n c0| (|optimized_h ha37| state))) ; optimized_half_adder.c0
  (= (|optimized#16| state) (|optimized_half_adder_n s0| (|optimized_h ha37| state))) ; optimized_half_adder.s0
  (|optimized_half_adder_h| (|optimized_h ha11| state))
  (|optimized_half_adder_h| (|optimized_h ha22| state))
  (|optimized_full_adder_h| (|optimized_h fa12| state))
  (|optimized_full_adder_h| (|optimized_h fa13| state))
  (|optimized_full_adder_h| (|optimized_h fa14| state))
  (|optimized_half_adder_h| (|optimized_h ha15| state))
  (|optimized_full_adder_h| (|optimized_h fa23| state))
  (|optimized_full_adder_h| (|optimized_h fa24| state))
  (|optimized_full_adder_h| (|optimized_h fa25| state))
  (|optimized_full_adder_h| (|optimized_h fa26| state))
  (|optimized_half_adder_h| (|optimized_h ha32| state))
  (|optimized_half_adder_h| (|optimized_h ha34| state))
  (|optimized_half_adder_h| (|optimized_h ha35| state))
  (|optimized_half_adder_h| (|optimized_h ha36| state))
  (|optimized_half_adder_h| (|optimized_h ha37| state))
))
(define-fun |optimized_t| ((state |optimized_s|) (next_state |optimized_s|)) Bool (and
  (|optimized_half_adder_t| (|optimized_h ha11| state) (|optimized_h ha11| next_state))
  (|optimized_half_adder_t| (|optimized_h ha22| state) (|optimized_h ha22| next_state))
  (|optimized_full_adder_t| (|optimized_h fa12| state) (|optimized_h fa12| next_state))
  (|optimized_full_adder_t| (|optimized_h fa13| state) (|optimized_h fa13| next_state))
  (|optimized_full_adder_t| (|optimized_h fa14| state) (|optimized_h fa14| next_state))
  (|optimized_half_adder_t| (|optimized_h ha15| state) (|optimized_h ha15| next_state))
  (|optimized_full_adder_t| (|optimized_h fa23| state) (|optimized_h fa23| next_state))
  (|optimized_full_adder_t| (|optimized_h fa24| state) (|optimized_h fa24| next_state))
  (|optimized_full_adder_t| (|optimized_h fa25| state) (|optimized_h fa25| next_state))
  (|optimized_full_adder_t| (|optimized_h fa26| state) (|optimized_h fa26| next_state))
  (|optimized_half_adder_t| (|optimized_h ha32| state) (|optimized_h ha32| next_state))
  (|optimized_half_adder_t| (|optimized_h ha34| state) (|optimized_h ha34| next_state))
  (|optimized_half_adder_t| (|optimized_h ha35| state) (|optimized_h ha35| next_state))
  (|optimized_half_adder_t| (|optimized_h ha36| state) (|optimized_h ha36| next_state))
  (|optimized_half_adder_t| (|optimized_h ha37| state) (|optimized_h ha37| next_state))
)) ; end of module optimized
; yosys-smt2-module miter
(define-sort |miter_s| () (_ BitVec 193))
(define-fun |miter_is| ((state |miter_s|)) Bool (= ((_ extract 0 0) state) #b1))
; yosys-smt2-cell unoptimized gold
; yosys-smt2-witness {"path": ["\\gold"], "smtname": "gold", "type": "cell"}
(define-fun |miter#0| ((state |miter_s|)) (_ BitVec 8) ((_ extract 8 1) state)) ; \gold_prod
(define-fun |miter_h gold| ((state |miter_s|)) (_ BitVec 77) ((_ extract 85 9) state))
; yosys-smt2-cell optimized gate
; yosys-smt2-witness {"path": ["\\gate"], "smtname": "gate", "type": "cell"}
(define-fun |miter#1| ((state |miter_s|)) (_ BitVec 8) ((_ extract 93 86) state)) ; \gate_prod
(define-fun |miter_h gate| ((state |miter_s|)) (_ BitVec 91) ((_ extract 184 94) state))
(define-fun |miter#2| ((state |miter_s|)) Bool (= (|miter#0| state) (|miter#1| state))) ; $auto$miter.cc:242:create_miter_equiv$88
(define-fun |miter#3| ((state |miter_s|)) (_ BitVec 1) (bvnot (ite (|miter#2| state) #b1 #b0))) ; \trigger
; yosys-smt2-output trigger 1
(define-fun |miter_n trigger| ((state |miter_s|)) Bool (= ((_ extract 0 0) (|miter#3| state)) #b1))
(define-fun |miter#4| ((state |miter_s|)) (_ BitVec 4) ((_ extract 188 185) state)) ; \in_B
; yosys-smt2-input in_B 4
; yosys-smt2-witness {"offset": 0, "path": ["\\in_B"], "smtname": "in_B", "smtoffset": 0, "type": "input", "width": 4}
(define-fun |miter_n in_B| ((state |miter_s|)) (_ BitVec 4) (|miter#4| state))
(define-fun |miter#5| ((state |miter_s|)) (_ BitVec 4) ((_ extract 192 189) state)) ; \in_A
; yosys-smt2-input in_A 4
; yosys-smt2-witness {"offset": 0, "path": ["\\in_A"], "smtname": "in_A", "smtoffset": 0, "type": "input", "width": 4}
(define-fun |miter_n in_A| ((state |miter_s|)) (_ BitVec 4) (|miter#5| state))
; yosys-smt2-assert 0 $auto$miter.cc:274:create_miter_equiv$89
(define-fun |miter_a 0| ((state |miter_s|)) Bool (or (|miter#2| state) (not true))) ; $auto$miter.cc:274:create_miter_equiv$89
(define-fun |miter_a| ((state |miter_s|)) Bool (and
  (|miter_a 0| state)
  (|optimized_a| (|miter_h gate| state))
  (|unoptimized_a| (|miter_h gold| state))
))
(define-fun |miter_u| ((state |miter_s|)) Bool (and
  (|optimized_u| (|miter_h gate| state))
  (|unoptimized_u| (|miter_h gold| state))
))
(define-fun |miter_i| ((state |miter_s|)) Bool (and
  (|optimized_i| (|miter_h gate| state))
  (|unoptimized_i| (|miter_h gold| state))
))
(define-fun |miter_h| ((state |miter_s|)) Bool (and
  (= (|miter_is| state) (|optimized_is| (|miter_h gate| state)))
  (= (|miter#1| state) (|optimized_n prod| (|miter_h gate| state))) ; optimized.prod
  (= (|miter#4| state) (|optimized_n B| (|miter_h gate| state))) ; optimized.B
  (= (|miter#5| state) (|optimized_n A| (|miter_h gate| state))) ; optimized.A
  (= (|miter_is| state) (|unoptimized_is| (|miter_h gold| state)))
  (= (|miter#0| state) (|unoptimized_n prod| (|miter_h gold| state))) ; unoptimized.prod
  (= (|miter#4| state) (|unoptimized_n B| (|miter_h gold| state))) ; unoptimized.B
  (= (|miter#5| state) (|unoptimized_n A| (|miter_h gold| state))) ; unoptimized.A
  (|optimized_h| (|miter_h gate| state))
  (|unoptimized_h| (|miter_h gold| state))
))
(define-fun |miter_t| ((state |miter_s|) (next_state |miter_s|)) Bool (and
  (|optimized_t| (|miter_h gate| state) (|miter_h gate| next_state))
  (|unoptimized_t| (|miter_h gold| state) (|miter_h gold| next_state))
)) ; end of module miter
; end of yosys output

(declare-const state |miter_s|)
(assert (|miter_h| state)) ; Hierarchy assertion
(assert (not (|miter_a| state))) ; Miter assertion failure - output of miter is true
(check-sat)
